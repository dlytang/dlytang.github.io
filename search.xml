<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>alist转移教程</title>
      <link href="/2025/06/20/program/2025-06-20-alist/"/>
      <url>/2025/06/20/program/2025-06-20-alist/</url>
      
        <content type="html"><![CDATA[<p>把文件解压复制过去<br>修改alist权限为<code>777</code><br>使用任意方式编辑 /usr/lib/systemd/system/alist.service 并添加如下内容，其中 path_alist 为 AList 所在的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=alist</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=path_alist</span><br><span class="line">ExecStart=path_alist/alist server</span><br><span class="line">Restart=on-failure</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后，执行 <code>systemctl daemon-reload</code> 重载配置，现在你可以使用这些命令来管理程序：</p><p>启动: <code>systemctl start alist</code><br>关闭: <code>systemctl stop alist</code><br>配置开机自启: <code>systemctl enable alist</code><br>取消开机自启: <code>systemctl disable alist</code><br>状态: <code>systemctl status alist</code><br>重启: <code>systemctl restart alist</code></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 懒人精灵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>64位 微信 hook 记录</title>
      <link href="/2025/06/08/program/2025-06-08-wxhookx64/"/>
      <url>/2025/06/08/program/2025-06-08-wxhookx64/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误." data-whm="抱歉, 这个文章不能被校验.">  <script id="hbeData" type="hbeData" data-hmacdigest="bba7871a29034e843224601ec9e39a141114012d5894355a6cee4f300419de27"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>懒人精灵脚本开发</title>
      <link href="/2025/01/30/program/2025-01-30-LRJL/"/>
      <url>/2025/01/30/program/2025-01-30-LRJL/</url>
      
        <content type="html"><![CDATA[<p>最近需要一个类似于按键精灵的脚本，正好重拾一下之前学过的懒人精灵，现在的1.6.0打包apk收费了，还好我用的之前下的1.2.6版本，免费打开<br>之前一直不理解UI如何交互，趁着这次正好学一下<br>其实都有例子</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onUIEvent</span><span class="params">(handle,event,arg1,arg2,arg3)</span></span></span><br><span class="line"><span class="keyword">if</span> event == <span class="string">&quot;onload&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;窗口被加载了&quot;</span>)</span><br><span class="line"><span class="keyword">elseif</span> event == <span class="string">&quot;onclick&quot;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;按钮点击事件:&quot;</span>,arg1,arg2)</span><br><span class="line">        keyPress(<span class="string">&quot;home&quot;</span>)</span><br><span class="line"><span class="keyword">elseif</span> event == <span class="string">&quot;onchecked&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;多选框选中或反选事件:&quot;</span>,arg1,arg2)</span><br><span class="line"><span class="keyword">elseif</span> event == <span class="string">&quot;onselected&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;单选框或者下拉框事件:&quot;</span>,arg1,arg2)</span><br><span class="line"><span class="keyword">elseif</span> event == <span class="string">&quot;onclose&quot;</span> <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;关闭窗口&quot;</span>,arg1)</span><br><span class="line">        closeWindow(handle,arg1)</span><br><span class="line"><span class="keyword">elseif</span> event == <span class="string">&quot;onwebviewjsevent&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;webview事件&quot;</span>,arg1,arg2,arg3)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- 这里改成你自己的ui文件名</span></span><br><span class="line"><span class="keyword">local</span> ret = showUI(<span class="string">&quot;test.ui&quot;</span>,<span class="number">-1</span>,<span class="number">1200</span>,onUIEvent)</span><br><span class="line"><span class="keyword">local</span> ret_json = jsonLib.decode(ret)</span><br><span class="line"><span class="built_in">print</span>(ret_json)</span><br><span class="line"><span class="comment">-- 可以通过ret_json来获取界面中的输入框等的值</span></span><br></pre></td></tr></table></figure><p>假如需要在界面中点登陆然后成功后再启动脚本的话，就修改上面那个<code>onUIEnent</code>函数<br>比如按钮点击了，可以通过<code>arg1</code>和<code>arg2</code>确定是哪个按钮，再执行对应的函数</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> arg2==<span class="string">&quot;登录&quot;</span> <span class="keyword">then</span></span><br><span class="line">    登录(handle)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>还有一个就是跳转app的某个界面，可以通过这个函数来完成</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">openalipay</span><span class="params">(url)</span></span></span><br><span class="line">i =&#123;&#125;;</span><br><span class="line"><span class="comment">-- android 配置的action 选项， 通常和uri 配合使用  这个应该不用改</span></span><br><span class="line">i[<span class="string">&#x27;action&#x27;</span>] = <span class="string">&quot;android.intent.action.VIEW&quot;</span>;</span><br><span class="line"><span class="comment">-- uri 通常用作协议跳转</span></span><br><span class="line">i[<span class="string">&#x27;uri&#x27;</span>] = url</span><br><span class="line">    <span class="comment">-- data 额外增加的数据</span></span><br><span class="line">i[<span class="string">&#x27;data&#x27;</span>] =<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">-- packageName 通常指 要跳转的包名</span></span><br><span class="line">i[<span class="string">&#x27;packageName&#x27;</span>] = <span class="string">&quot;com.eg.android.AlipayGphone&quot;</span>;</span><br><span class="line"><span class="comment">-- classname 通常指 具体要跳转的activity</span></span><br><span class="line">i[<span class="string">&#x27;classname&#x27;</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">-- extra 为额外增加的 参数</span></span><br><span class="line">i[<span class="string">&#x27;extra&#x27;</span>] = &#123;&#125;;</span><br><span class="line">runIntent(i)</span><br><span class="line">sleep(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> 自动化 </tag>
            
            <tag> 懒人精灵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS逆向之webpack处理</title>
      <link href="/2024/12/23/program/2024-12-23-webpack/"/>
      <url>/2024/12/23/program/2024-12-23-webpack/</url>
      
        <content type="html"><![CDATA[<h2 id="二更"><a href="#二更" class="headerlink" title="二更"></a>二更</h2><p>基本上加载器都是这个格式的，今天看了个网站没找到类似<code>!function(o)</code>的地方，可以自己写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        l = &#123;&#125;;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> h = l[a];</span><br><span class="line">            <span class="keyword">if</span> (h !== <span class="keyword">void</span> <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> h.exports;</span><br><span class="line">            <span class="keyword">var</span> t = l[a] = &#123;</span><br><span class="line">                id: a,</span><br><span class="line">                loaded: !<span class="number">1</span>,</span><br><span class="line">                <span class="built_in">exports</span>: &#123;&#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// console.log(&quot;Loading module:&quot;, a);</span></span><br><span class="line">            <span class="keyword">return</span> e[a].call(t.exports, t, t.exports, func),</span><br><span class="line">            t.loaded = !<span class="number">0</span>,</span><br><span class="line">            t.exports</span><br><span class="line">        &#125;</span><br><span class="line">        func.m = e,</span><br><span class="line">        jzq = func</span><br><span class="line">&#125;(&#123;</span><br><span class="line">    <span class="comment">// 这里写具体的函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p>很早就想学下webpack该如何处理，前几天正好看到一篇推送，正好学一下吧<br>结合了宇哥的视频一起学的。<br>教程：<a href="https://mp.weixin.qq.com/s/QqvYYe632s363Q2um2Lxvg">JS逆向案例-一个案例给你讲明白webpack如何解决</a></p><p>网址：aHR0cHM6Ly9hcHAuZGlhbmRpYW4uY29tLw==<br>首先找到加密位置，就是这个<code>k</code>参数，在每个请求里都有。</p><p><img src="webpack1.png" alt="加密位置"></p><p>去堆栈里找加密位置，这个也卡了一会。一直不确定加密位置在哪。<br>可以看到就是这个<code>o</code>就是加密结果，传了三个参数。<br>直接把他扣下来。<br><img src="webpack2.png" alt="加密">    </p><p>往上找，可以看到<code>y</code>在这里定义，也就是<code>n(2337)</code>，这就是标准的<code>webpack</code>形式。<br><img src="webpack3.png" alt="y定义"></p><p>找到<code>n</code>定义的位置，也就是加载器。<br>点进去<br><img src="webpack4.png" alt="n定义"></p><p>往上找，找到这种，然后折叠，复制下来。<br><img src="webpack5.png" alt="加载器"></p><p>把后面改成这种格式，加载器的最后一行是<code>d()</code>，把他引出到外面，用<code>jzq</code>来调用<code>c</code>，运行一下，不报错就对了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="comment">// d()</span></span><br><span class="line">    jzq = c;</span><br><span class="line">&#125;(</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 函数放在这里</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>然后就是调用了，改成下面这个调用方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="comment">// d()</span></span><br><span class="line">    jzq = c;</span><br><span class="line">&#125;(</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 函数放在这里</span></span><br><span class="line">        <span class="number">2337</span>: <span class="function"><span class="keyword">function</span>(<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line">y = jzq(<span class="number">2337</span>)</span><br><span class="line">o = <span class="built_in">Object</span>(y.a)(r, path, &#123;</span><br><span class="line">    s: n.s,</span><br><span class="line">    k: n.k,</span><br><span class="line">    l: n.l,</span><br><span class="line">    d: n.d,</span><br><span class="line">    sort: n.sort,</span><br><span class="line">    num: n.num</span><br><span class="line">&#125;, <span class="string">&quot;get&quot;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(o)</span><br></pre></td></tr></table></figure><p>运行一下，会报错的，补一下<code>window = global;</code><br>发现还是报错，到这个位置输出一下<code>e</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> o[e].call(d.exports, d, d.exports, c),</span><br><span class="line">                    ^</span><br><span class="line"><span class="built_in">TypeError</span>: Cannot read properties <span class="keyword">of</span> <span class="literal">undefined</span> (reading <span class="string">&#x27;call&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以看到是缺少<code>119</code>这个函数，去找下然后补进来<br><img src="webpack6.png" alt="加载器"></p><p>这个网站里<code>webpack</code>的函数分布在不同的<code>js</code>文件里，补函数的过程比较费劲，但好在补完基本就能用了，再补下<code>document</code>就行了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; JSDOM &#125; = <span class="built_in">require</span>(<span class="string">&#x27;jsdom&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dom = <span class="keyword">new</span> JSDOM();</span><br><span class="line"><span class="built_in">window</span>.document = dom.window.document</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> JS逆向 </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS逆向之wasm处理</title>
      <link href="/2024/12/04/program/2024-12-04-wasm/"/>
      <url>/2024/12/04/program/2024-12-04-wasm/</url>
      
        <content type="html"><![CDATA[<p>参考资料：<br><a href="https://blog.csdn.net/weixin_44259233/article/details/139743886">2024最新版Node.js下载安装及环境配置教程（非常详细）</a><br><a href="https://www.bilibili.com/video/BV1FC4y1c7G5">JS逆向之wasm算法(JS二进制)</a><br><a href="https://blog.csdn.net/weixin_44504978/article/details/134582284">JS逆向之wasm逆向（二）</a></p><p>准备复现<br><a href="https://mp.weixin.qq.com/s/4M1KRSvVn3gRtUISQ6VgfA">记录一次wasm逆向</a><br><a href="https://mp.weixin.qq.com/s/urN5QOX0trRND3z9OsNVoA">JS逆向之wasm逆向(二进制)</a><br><a href="https://mp.weixin.qq.com/s/2-Psj4mC0SR_8lbimqEuvw">【JS逆向百例】酷某音乐 wasm 逆向</a><br><a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1900845">某视频解析网站js逆向分析——学会wasm文件类型逆向</a><br><a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1773515">某某电影网页wasm逆向思路</a></p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>最近整理题库时，遇到了wasm形式的加密，即浏览器调用wasm的函数实现加解密，而我们无法像调试js一样逆向，所以有一定难度，记录一下学习过程。</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>是一个小程序，再获取题目时对题目和选项进行了加密，一开始以为是普通的 <code>AES</code> 或者 <code>DES</code><br>还想用调试看看小程序代码，结果开了调试直接闪退，重装几次微信都是这样，后面才知道或许就是因为这个<code>wasm</code><br>还好这个小程序有网页版，加密跟小程序一样，要是只有小程序的话我估计是搞不出来了</p><p>前面尝试了很多方法，小程序调试用不了，就用传统的解包看代码吧，发现了有这个<code>wasm</code>，于是去网上找教程该怎么办<br>一般是需要用<code>nodejs</code>来加载这个<code>wasm</code>，我尝试了很多次也没成功。</p><p>后面发现了网页版，调试起来就方便多了</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>网址：aHR0cHM6Ly93d3cuYXFsZWFybi5jb20vcHJhY3RpY2UvIy9pbmRleA==<br>打开网页，分析下js，不难发现<code>Rh</code>函数即为需要的解密函数<br><img src="wasm1.png" alt="解密函数"></p><p>一步一步跟，发现下面这个函数定义的有些问题，都与<code>Xr</code>有关</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Qe._get_secret = <span class="function">(<span class="params">e, t, n</span>) =&gt;</span> (Qe._get_secret = Xr.e)(e, t, n);</span><br><span class="line">Qe._malloc = <span class="function"><span class="params">e</span> =&gt;</span> (Qe._malloc = Xr.f)(e);</span><br><span class="line">Qe._free = <span class="function"><span class="params">e</span> =&gt;</span> (Qe._free = Xr.g)(e);</span><br><span class="line">Qe._decrypt = <span class="function">(<span class="params">e, t, n, o</span>) =&gt;</span> (Qe._decrypt = Xr.h)(e, t, n, o);</span><br></pre></td></tr></table></figure><p>这个<code>Xr</code>就是<code>wasm</code>里的函数，后面分析时也能看出导出函数的名字就是<code>e</code>、<code>f</code>、<code>g</code>、<code>h</code></p><p>然后就继续找教程看看怎么实现这个功能吧</p><p>找了很多文字教程都没成功，快要放弃时，在b站搜到了一个视频，很快就写出来了</p><p><a href="https://www.bilibili.com/video/BV1FC4y1c7G5">JS逆向之wasm算法(JS二进制)</a><br>还有他的博客<br><a href="https://blog.csdn.net/weixin_44504978/article/details/134582284">JS逆向之wasm逆向（二）</a></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>首先是如何加载这个wasm文件并获取里面的函数，这就需要借助<code>nodejs</code>来实现了<br>百度一个教程，很详细，装起来很快，<a href="https://blog.csdn.net/weixin_44259233/article/details/139743886">2024最新版Node.js下载安装及环境配置教程（非常详细）</a></p><p>网站里的一般写法是通过fetch去加载wasm的代码<br><img src="wasm2.png" alt="加载wasm"><br>加载wasm时有两种加载方法，第一种是读取本地文件，第二种是读取网络文件传网络请求的参数，需要传两个参数，可以参考这篇<a href="https://developer.mozilla.org/zh-CN/docs/WebAssembly/JavaScript_interface/instantiateStreaming_static">WebAssembly教程</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">WebAssembly.instantiate(bufferSource, importObject);</span><br><span class="line">WebAssembly.instantiateStreaming(source, importObject)</span><br><span class="line"><span class="comment">//参数</span></span><br><span class="line"><span class="comment">//source</span></span><br><span class="line"><span class="comment">//一个 Response 对象或一个会兑现为 Response 的 promise，其表示你想要传输、编译和实例化的 Wasm 模块的底层源。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//importObject 可选</span></span><br><span class="line"><span class="comment">//包含一些想要导入到新创建的 Instance 中的值的对象，例如函数或 WebAssembly.Memory 对象。每个已编译模块的声明导入必须有一个匹配属性，否则抛出 WebAssembly.LinkError 异常。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在这个网站里，传入了n，这就需要扣代码了<br>不难发现，jie函数里的n是第三个参数，也就是qie函数里的e，可以发现在第一行已经定义了，顺着扣就好了，没什么难度<br><img src="wasm3.png" alt="初试化wasm"></p><p>由于没学过js，不太懂这个异步函数promise，尝试了很多遍之后，发现可以直接在then里写代码，定义好各种加密函数，然后在需要的时候调用这个Rh就行了<br>注意在原来的js里，加载完wasm后要执行jie函数里的n，也就是t，里面执行了很多函数并且返回了，虽然没按照他这种形式复现出来，但通过尝试，发现只有cy赋值这个有用，其他的对结果没有影响。<br><img src="wasm4.png" alt="Rh函数"></p><p>后面调用这个Rh函数就能正常解密了，由于不太会js，所以再用nodejs作为后端进行解密，python来爬虫</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化wasm</span></span><br><span class="line"><span class="keyword">var</span> promise_test = qie();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="comment">// 当请求参数传递时触发data事件</span></span><br><span class="line"><span class="comment">// 当请求参数传递结束时触发end事件</span></span><br><span class="line">        <span class="comment">// 所以需要data和end都写才能获取到完整数据</span></span><br><span class="line"><span class="keyword">let</span> postParams = <span class="string">&#x27;&#x27;</span></span><br><span class="line">req.on(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">parmas</span>)=&gt;</span>&#123;</span><br><span class="line">postParams += parmas</span><br><span class="line">&#125;)</span><br><span class="line">        req.on(<span class="string">&#x27;end&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            promise_test.then(<span class="function">(<span class="params">F</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> result = F(postParams);</span><br><span class="line">                <span class="built_in">console</span>.log(result)</span><br><span class="line">                res.end(result)</span><br><span class="line">                <span class="comment">// 下面这个是js对结果进行解码，有些符号解不出来，后面用python解了</span></span><br><span class="line">                <span class="comment">// res.end(unescape(result.replace(/&amp;#x/g, &#x27;%u&#x27;).replace(/;/g, &#x27;&#x27;)))</span></span><br><span class="line">            &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//监听端口号为3000窗口</span></span><br><span class="line">server.listen(<span class="number">3000</span>,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="keyword">if</span>( !err )&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;服务器已经开启 我们可以通过http://127.0.0.1:3000 来访问&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>总的来说不太难，只是之前没接触过wasm以及js，不知道怎么加载wasm以及如何处理promise，耽误了不少时间<br>以下是完整的js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">配套函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> Vi;</span><br><span class="line"><span class="keyword">var</span> Na = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> Qe = <span class="keyword">typeof</span> Qe &lt; <span class="string">&quot;u&quot;</span> ? Qe : &#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Vie</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = cy.buffer;</span><br><span class="line">    Qe.HEAP8 = <span class="keyword">new</span> <span class="built_in">Int8Array</span>(e),</span><br><span class="line">    Qe.HEAP16 = <span class="keyword">new</span> <span class="built_in">Int16Array</span>(e),</span><br><span class="line">    Qe.HEAPU8 = Dp = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(e),</span><br><span class="line">    Qe.HEAPU16 = <span class="keyword">new</span> <span class="built_in">Uint16Array</span>(e),</span><br><span class="line">    Qe.HEAP32 = <span class="keyword">new</span> <span class="built_in">Int32Array</span>(e),</span><br><span class="line">    Qe.HEAPU32 = <span class="keyword">new</span> <span class="built_in">Uint32Array</span>(e),</span><br><span class="line">    Qe.HEAPF32 = <span class="keyword">new</span> <span class="built_in">Float32Array</span>(e),</span><br><span class="line">    Qe.HEAPF64 = <span class="keyword">new</span> <span class="built_in">Float64Array</span>(e)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Die</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t;</span><br><span class="line">    Na++,</span><br><span class="line">    (t = Qe.monitorRunDependencies) == <span class="literal">null</span> || t.call(Qe, Na)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">vy</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n;</span><br><span class="line">    (n = Qe.onAbort) == <span class="literal">null</span> || n.call(Qe, e),</span><br><span class="line">    e = <span class="string">&quot;Aborted(&quot;</span> + e + <span class="string">&quot;)&quot;</span>,</span><br><span class="line">    Ii(e),</span><br><span class="line">    dy = !<span class="number">0</span>,</span><br><span class="line">    e += <span class="string">&quot;. Build with -sASSERTIONS for more info.&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> WebAssembly.RuntimeError(e);</span><br><span class="line">    <span class="keyword">throw</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Uie = <span class="function">(<span class="params">e, t, n</span>) =&gt;</span> Dp.copyWithin(e, t, t + n)</span><br><span class="line">, Yie = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    vy(<span class="string">&quot;OOM&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">, Gie = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    Dp.length,</span><br><span class="line">    Yie()</span><br><span class="line">&#125;</span><br><span class="line">, Xie = &#123;</span><br><span class="line">    b: Uie,</span><br><span class="line">    a: Gie</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jie</span>(<span class="params">e, t, n, o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> r = fs.readFileSync(<span class="string">&#x27;decrypt.wasm&#x27;</span>);     </span><br><span class="line">    <span class="keyword">let</span> b = WebAssembly.instantiate(r,n);</span><br><span class="line">    <span class="keyword">return</span> b.then(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> Xr = e.instance.exports;  <span class="comment">//wasm的导出函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(Xr)   </span><br><span class="line">        <span class="keyword">var</span> cy = Xr.c;</span><br><span class="line">        Qe._get_secret = <span class="function">(<span class="params">e, t, n</span>) =&gt;</span> (Qe._get_secret = Xr.e)(e, t, n);</span><br><span class="line">        Qe._malloc = <span class="function"><span class="params">e</span> =&gt;</span> (Qe._malloc = Xr.f)(e);</span><br><span class="line">        Qe._free = <span class="function"><span class="params">e</span> =&gt;</span> (Qe._free = Xr.g)(e);</span><br><span class="line">        Qe._decrypt = <span class="function">(<span class="params">e, t, n, o</span>) =&gt;</span> (Qe._decrypt = Xr.h)(e, t, n, o);</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">Rh</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (Qe == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            Qe.HEAPU8 = Dp = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(cy.buffer)</span><br><span class="line">            <span class="keyword">let</span> t = Qe.HEAPU8</span><br><span class="line">            , n = <span class="keyword">new</span> TextEncoder(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">            , o = <span class="keyword">new</span> TextDecoder(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> r = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</span>;</span><br><span class="line">            <span class="keyword">let</span> a = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> m = <span class="number">0</span>; m &lt; <span class="number">256</span>; m++)</span><br><span class="line">                a += r.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * r.Length));</span><br><span class="line">            <span class="keyword">let</span> l = n.encode(a);</span><br><span class="line">            <span class="keyword">const</span> s = Qe._malloc(l.length + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> m = <span class="number">0</span>; m &lt; l.length; m++)&#123;</span><br><span class="line">                t[s + m] = l[m];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> u = <span class="built_in">Math</span>.floor(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() / <span class="number">1e3</span>)</span><br><span class="line">            , c = Qe._get_secret(s, u, l.length);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">let</span> f = n.encode(e);</span><br><span class="line">            <span class="keyword">const</span> d = Qe._malloc(f.length + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> m = <span class="number">0</span>; m &lt; f.length; m++)</span><br><span class="line">                t[d + m] = f[m];</span><br><span class="line">            <span class="keyword">let</span> p = <span class="number">0</span></span><br><span class="line">            , v = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (p = Qe._decrypt(d, s, c, f.length),</span><br><span class="line">                p == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; t.length &amp;&amp; t[p + v] != <span class="number">0</span>; v++)</span><br><span class="line">                    ;</span><br><span class="line">                <span class="keyword">return</span> o.decode(t.subarray(p, p + v))</span><br><span class="line">            &#125; <span class="keyword">catch</span> (m) &#123;</span><br><span class="line">                <span class="keyword">return</span> m</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                s != <span class="number">0</span> &amp;&amp; Qe._free(s),</span><br><span class="line">                c != <span class="number">0</span> &amp;&amp; Qe._free(c),</span><br><span class="line">                d != <span class="number">0</span> &amp;&amp; Qe._free(d),</span><br><span class="line">                p != <span class="number">0</span> &amp;&amp; Qe._free(p)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Rh</span><br><span class="line">    &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qie</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = &#123;</span><br><span class="line">        a: Xie</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params">o, r</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Xr = o.exports,</span><br><span class="line">        cy = Xr.c,</span><br><span class="line">        Vie(),</span><br><span class="line">        Hie(Xr.d),</span><br><span class="line">        Fie(),</span><br><span class="line">        Xr</span><br><span class="line">    &#125;</span><br><span class="line">    Die();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">        t(o.instance)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Qe.instantiateWasm)</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Qe.instantiateWasm(e, t)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (o) &#123;</span><br><span class="line">            <span class="keyword">return</span> Ii(<span class="string">`Module.instantiateWasm callback failed with error: <span class="subst">$&#123;o&#125;</span>`</span>),</span><br><span class="line">            !<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> jie(Vi, <span class="string">&quot;Al&quot;</span>, e, n)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化wasm</span></span><br><span class="line"><span class="keyword">var</span> promise_test = qie();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer();</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="comment">// 当请求参数传递时触发data事件</span></span><br><span class="line"><span class="comment">// 当请求参数传递结束时触发end事件</span></span><br><span class="line">        <span class="comment">// 所以需要data和end都写才能获取到完整数据</span></span><br><span class="line"><span class="keyword">let</span> postParams = <span class="string">&#x27;&#x27;</span></span><br><span class="line">req.on(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">parmas</span>)=&gt;</span>&#123;</span><br><span class="line">postParams += parmas</span><br><span class="line">&#125;)</span><br><span class="line">        req.on(<span class="string">&#x27;end&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            promise_test.then(<span class="function">(<span class="params">F</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> result = F(postParams);</span><br><span class="line">                <span class="built_in">console</span>.log(result)</span><br><span class="line">                res.end(result)</span><br><span class="line">                <span class="comment">// 下面这个是js对结果进行解码，有些符号解不出来，后面用python解了</span></span><br><span class="line">                <span class="comment">// res.end(unescape(result.replace(/&amp;#x/g, &#x27;%u&#x27;).replace(/;/g, &#x27;&#x27;)))</span></span><br><span class="line">            &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//监听端口号为3000窗口</span></span><br><span class="line">server.listen(<span class="number">3000</span>,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="keyword">if</span>( !err )&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;服务器已经开启 我们可以通过http://127.0.0.1:3000 来访问&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> JS逆向 </tag>
            
            <tag> wasm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yolo</title>
      <link href="/2024/09/29/program/2024-09-29-YOLO/"/>
      <url>/2024/09/29/program/2024-09-29-YOLO/</url>
      
        <content type="html"><![CDATA[<p>最近几天看到论坛里很多人发yolo相关的模块，自己也闲着没事干，正好学了一下，记录一下安装训练过程</p><p>下面的都是yolov8的教程，v5的还没试  </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>推荐用<code>Anaconda</code>来安装<code>yolo</code><br>构建一个虚拟环境，python用最新的也没事，</p><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><h3 id="标注"><a href="#标注" class="headerlink" title="标注"></a>标注</h3><p>标注软件有很多，目前用的是<code>labelImg</code>，但<code>python</code>版本太高会闪退，推荐用3.9的<code>python</code><br>构建一个虚拟环境即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install labelimg</span><br></pre></td></tr></table></figure><p>输入<code>labelimg</code>启动</p><h3 id="训练-1"><a href="#训练-1" class="headerlink" title="训练"></a>训练</h3><p>标注完成后，按照下面的路径放置图片和标签</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">images</span><br><span class="line"> - train   #训练集图片</span><br><span class="line"> - val     #验证集图片</span><br><span class="line">labels</span><br><span class="line"> - train   #训练集标签</span><br><span class="line"> - val     #验证集标签</span><br></pre></td></tr></table></figure><p>xxx.yaml 文件安装下面的写</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xxx.yaml 文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">path:</span> <span class="string">D:\Desktop\test</span> <span class="comment"># dataset 路径，里面有images和labels文件夹</span></span><br><span class="line"><span class="attr">train:</span> <span class="string">D:\Desktop\test\images\train</span></span><br><span class="line"><span class="attr">val:</span> <span class="string">D:\Desktop\test\images\val</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 标签</span></span><br><span class="line"><span class="attr">names:</span></span><br><span class="line">  <span class="attr">0:</span> <span class="string">qk</span></span><br></pre></td></tr></table></figure><p>现在就可以训练了，但建议先修改一些配置文件<br>打开<code>%USERPROFILE%\AppData\Roaming\Ultralytics</code>，修改<code>settings.json</code>里的<code>datasets_dir</code>,<code>weights_dir</code>,<code>runs_dir</code>改成你的，不然训练结果会默认保存在C盘</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;settings_version&quot;</span>: <span class="string">&quot;0.0.6&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;datasets_dir&quot;</span>: <span class="string">&quot;xxx\\datasets&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;weights_dir&quot;</span>: <span class="string">&quot;xxx\\weights&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;runs_dir&quot;</span>: <span class="string">&quot;xxx\\runs&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;uuid&quot;</span>: <span class="string">&quot;0b58cb50a0696fd5120727da25cac90347e58baf5aaf1579a9cdb1ab2a8b031a&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;sync&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;api_key&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;openai_api_key&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;clearml&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;comet&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;dvc&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;hub&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;mlflow&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;neptune&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;raytune&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;tensorboard&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;wandb&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;vscode_msg&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在就可以训练</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yolo detect train data=datasets/test/test.yaml model=yolov8n.pt epochs=40 imgsz=640</span><br></pre></td></tr></table></figure><p>训练完成后会在保存的路径里生成<code>best.pt</code>的模型文件，可以转换成<code>onnx</code>的模型文件，命令如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yolo export model=best.pt format=onnx imgsz=640</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Yolo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新电脑记录</title>
      <link href="/2024/09/09/program/2024-09-09-New_computer/"/>
      <url>/2024/09/09/program/2024-09-09-New_computer/</url>
      
        <content type="html"><![CDATA[<p>还是没忍住，在买了显示屏之后就买了主机，记录一下装机过程以及需要的软件<br>注意电脑用户名要用英文，C盘用户文件夹的名就是这个用户名，中文可能会出问题，所以尽量还是用英文吧。</p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h4 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h4><p>直接从官网上下载即可，没什么说的，登录账号的话还能把之前数据(收藏夹、填充密码、扩展插件等)同步过来，也挺方便的   </p><h4 id="traffic-monitor"><a href="#traffic-monitor" class="headerlink" title="traffic monitor"></a>traffic monitor</h4><p>占用监控，基本算是必备了</p><h4 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h4><p>从网盘下绿色版即可，下载速度飞快</p><h4 id="PixPin"><a href="#PixPin" class="headerlink" title="PixPin"></a>PixPin</h4><p>截图软件，改下键位截图很方便</p><h4 id="QQ拼音输入法"><a href="#QQ拼音输入法" class="headerlink" title="QQ拼音输入法"></a>QQ拼音输入法</h4><p>注意切换输入法是按 <code>左Alt+Shift</code></p><h4 id="V2rayN"><a href="#V2rayN" class="headerlink" title="V2rayN"></a>V2rayN</h4><h4 id="火绒"><a href="#火绒" class="headerlink" title="火绒"></a>火绒</h4><h4 id="7zip"><a href="#7zip" class="headerlink" title="7zip"></a>7zip</h4><h4 id="Vscode"><a href="#Vscode" class="headerlink" title="Vscode"></a>Vscode</h4><h4 id="腾讯桌面管家"><a href="#腾讯桌面管家" class="headerlink" title="腾讯桌面管家"></a>腾讯桌面管家</h4><p>可以在设置中一键关闭快捷方式左下角的小箭头</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装机软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IOS逆向记录</title>
      <link href="/2024/07/04/program/2024-07-04-ios/"/>
      <url>/2024/07/04/program/2024-07-04-ios/</url>
      
        <content type="html"><![CDATA[<p>还没开始，先记录下看过的教程<br><a href="https://mp.weixin.qq.com/s?__biz=MjM5NTc2MDYxMw==&mid=2458508052&idx=1&sn=256d3112f59e04971106ef8fabc8acac&chksm=b18eeb9e86f96288c423267a25a45834adeec28ac8301f3f2c2c9aecc53e69875186d281065d&scene=27">iOS逆向初探-变种AES加密的分析与还原</a></p><p><a href="https://mp.weixin.qq.com/s/-p46ql5OPp7DcnfmkQdgkw">【iOS逆向】某社区电商最新版shield纯算</a></p><p><a href="https://bbs.kanxue.com/thread-278175.htm">[原创]Frida 拦截 iOS 所有(已知)密码学函数 （ Frida-iOS-Cipher ）</a></p><h2 id="0-准备"><a href="#0-准备" class="headerlink" title="0. 准备"></a>0. 准备</h2><p>要越狱，借助爱思助手即可，注意IOS的版本号支不支持越狱<br>失败了就多试几次，可以翻下墙</p><p>然后安装<code>openssh</code>，就可以用电脑安装<code>frida</code>等软件了</p><p>安装<code>frida</code>，安装最新版即可，版本太低没有<code>arm64</code>的deb包，注意看下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install frida==16.7.3</span><br><span class="line">pip install frida-tools==13.6.1</span><br><span class="line">pip install objection==1.11.0</span><br></pre></td></tr></table></figure><p>还有个坑就是<code>ssh</code>连手机，用爱思助手里的<code>打开SSH通道</code>会经常断开连接，可以去wifi详细信息里看手机的局域网地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh mobile@192.168.31.106 #mobile的密码是自己设置的</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 好像直接连接root连不上，默认密码：alpine</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以输入sudo -i 再输mobile的密码切换到root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 改密码</span></span><br><span class="line">passwd </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看进程pid<br>-U是USB设备的意思</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-ps -U</span><br></pre></td></tr></table></figure><p>如果报错，就在ssh里输入下面的命令启动frida即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-server</span><br></pre></td></tr></table></figure><h2 id="1-Objection的使用"><a href="#1-Objection的使用" class="headerlink" title="1. Objection的使用"></a>1. Objection的使用</h2><p>注入进程，如果objection没有找到进程，会以spwan方式启动进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">objection --help</span><br><span class="line">objection -g &lt;进程名&gt; explore</span><br><span class="line">objetion log 文件位置C:\Users\Administrator\.objection</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭ssl校验</span></span><br><span class="line"></span><br><span class="line">ios sslpinning disable</span><br></pre></td></tr></table></figure><h2 id="2-frida-trace的使用"><a href="#2-frida-trace的使用" class="headerlink" title="2. frida-trace的使用"></a>2. frida-trace的使用</h2><p><a href="https://blog.csdn.net/weixin_38927522/article/details/129388091">https://blog.csdn.net/weixin_38927522/article/details/129388091</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">frida-trace --help</span><br><span class="line">frida-trace -U -o log.txt -p 17848 -i CCCrypt</span><br><span class="line">frida-trace -U -o log.txt -p 938 -i CC_MD5</span><br><span class="line">frida-trace -U -o log.txt -p 742 -i SecKeyEncrypt  #RSA</span><br><span class="line"> </span><br><span class="line">``` shell</span><br><span class="line">frida-trace -U -o log.txt -i CCCrypt -p &lt;pid&gt;</span><br><span class="line">-i 表示Hook的C函数符号</span><br><span class="line">-m 表示Hook的OC函数的符号</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 3. frida</span></span></span><br><span class="line">``` shell</span><br><span class="line">frida -U -o log.txt -p 742 -l iosciper.js</span><br></pre></td></tr></table></figure><p>打印堆栈</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log(<span class="string">&#x27;堆栈 from:\n&#x27;</span> +Thread.backtrace(<span class="built_in">this</span>.context, Backtracer.ACCURATE).map(DebugSymbol.fromAddress).join(<span class="string">&#x27;\n&#x27;</span>) + <span class="string">&#x27;\n&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IOS 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序逆向记录</title>
      <link href="/2024/07/01/program/2024-07-01-wechat-mini-program/"/>
      <url>/2024/07/01/program/2024-07-01-wechat-mini-program/</url>
      
        <content type="html"><![CDATA[<p>微信小程序逆向比较简单，之前也一直没记录过，这次有空记录下</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>微信小程序的包在本地，但加密了，需要解密才能得到<code>js</code>等文件，才能进行后续的分析</p><h3 id="wuWxapkg"><a href="#wuWxapkg" class="headerlink" title="wuWxapkg"></a>wuWxapkg</h3><p>这个是最传统的，工具很多，这里值列举几个<br>首先是<code>wxapkg</code>解密，PC端的有加密，手机端的没有<br>利用<code>pc_wxapkg_decrypt.exe</code>进行解密，使用方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pc_wxapkg_decrypt.exe -wxid 微信小程序id -in 要解密的wxapkg路径 -out 解密后的路径</span><br></pre></td></tr></table></figure><p>其次是反编译，工具也有很多，例如<code>CrackMinApp.exe</code>,<code>wxappUnpacker</code>等<br><code>wxappUnpacker</code>使用方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">没有分包或主包：</span><br><span class="line">bingo.bat xxx.wxapkg</span><br><span class="line"></span><br><span class="line">有分包：</span><br><span class="line">node wuWxapkg.js -s=主包路径 分包.wxapkg</span><br><span class="line"></span><br><span class="line">报错的话用手机找wxapkg解包</span><br></pre></td></tr></table></figure><h3 id="unveilr"><a href="#unveilr" class="headerlink" title="unveilr"></a>unveilr</h3><p>类似一键工具包了，注意路径里要带<code>微信小程序id</code>，同时路径里也不要有空格</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unveilr.exe &quot;D:\Desktop\wxda137c2efa9b7955\13&quot;</span><br></pre></td></tr></table></figure><h3 id="WeChatOpenDevTools"><a href="#WeChatOpenDevTools" class="headerlink" title="WeChatOpenDevTools"></a>WeChatOpenDevTools</h3><p>这个就比较强大了，小程序和微信网页直接整出来F12了<br>但实际用起来也不是那么好，比如搜索不出来，代码格式化不了等等，但不管怎么说已经很方便了<br>开源地址：<code>https://github.com/JaveleyQAQ/WeChatOpenDevTools-Python</code></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APP逆向记录</title>
      <link href="/2024/06/24/program/2024-06-24-frida_example/"/>
      <url>/2024/06/24/program/2024-06-24-frida_example/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误." data-whm="抱歉, 这个文章不能被校验.">  <script id="hbeData" type="hbeData" data-hmacdigest="9a43b8a772f53ae5b21d78a56cd028e1a7ac74a9364e6989099d56bb9626a4e5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信 hook 记录</title>
      <link href="/2024/05/01/program/2024-05-01-wxhook/"/>
      <url>/2024/05/01/program/2024-05-01-wxhook/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误." data-whm="抱歉, 这个文章不能被校验.">  <script id="hbeData" type="hbeData" data-hmacdigest="f7aab59d4572feaff25ba10c2202f0a7132fcdfb6f19780c3a0e3c23ffb9995f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单线多拨提升网速</title>
      <link href="/2022/11/21/program/2022-11-21-network/"/>
      <url>/2022/11/21/program/2022-11-21-network/</url>
      
        <content type="html"><![CDATA[<p>校园网每个设备限速6M/s，想着怎么能提高一下，搜到了单线多拨的教程，今天尝试了一下，成功了，记录下过程。<br><a href="https://blog.csdn.net/m0_59496782/article/details/121862378">教程1</a><br><a href="https://blog.csdn.net/Cx2008Lxl/article/details/127033433">教程2</a><br><a href="https://blog.csdn.net/Cx2008Lxl/article/details/123115782">教程3</a></p><h2 id="1-添加虚拟网卡"><a href="#1-添加虚拟网卡" class="headerlink" title="1. 添加虚拟网卡"></a>1. 添加虚拟网卡</h2><ul><li>安装macvlan<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-macvlan</span><br></pre></td></tr></table></figure></li><li>创建并启用虚拟网卡<br>这里创建两个虚拟网卡，即网速变为2倍<br>eth3 为wan口对应的物理网卡<br>veth0为虚拟网卡名称<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 添加一个类型为macvlan，名字为veth0的虚拟网卡，并通过虚拟链路和eth0.2连接起来</span><br><span class="line">ip link add link eth3 name veth0 type macvlan </span><br><span class="line">ip link add link eth3 name veth1 type macvlan </span><br><span class="line"># 启用创建的veth0网卡</span><br><span class="line">ifconfig veth0 up </span><br><span class="line">ifconfig veth1 up </span><br></pre></td></tr></table></figure>输入<code>ifconfig</code>看到<code>veth0</code>和<code>veth1</code>表示成功。<h2 id="2-创建接口"><a href="#2-创建接口" class="headerlink" title="2.创建接口"></a>2.创建接口</h2>进入OpenWrt网页后台，点击网络→接口<br>建议先把已经绑定到上面eth3的wan口删除或者设为开机时不启动，避免虚拟网卡获取不到IP地址<br>添加新接口，设备选择虚拟网卡veth0，校园网是DHCP协议，然后创建接口。<br>设置网关跃点，随便一个值，但不要和其他wan口重复。<br>获取到IP表示成功。   </li></ul><h2 id="3-负载均衡"><a href="#3-负载均衡" class="headerlink" title="3. 负载均衡"></a>3. 负载均衡</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install mwan3 luci-app-mwan3</span><br></pre></td></tr></table></figure><ul><li>添加接口<br>安装完后到网络→负载均衡界面，把接口、成员、策略里面的配置全部删掉<br>在接口里面新增vwan1，名字要和在网络→接口添加的接口名相同，否则无法匹配接口<br>勾选启用，填入跟踪的IP(223.5.5.5)，接口会ping这个IP检查自己是否在线。其他配置保持默认就行,最下面的跃点数会自动获取，如果显示-表示跃点数重复，修改之前的接口即可。   </li><li>成员配置<br>路由优先发往跃点值较小的接口。跃点值相同的接口，按权重走路由。如果你用的是同一个号，网速相同，推荐相同跃点数，权重1:1，自行斟酌就ok</li><li>策略配置<br>添加一个平衡策略balanced，把前面的所有成员添加进来。</li><li>规则配置<br>用默认的就行</li></ul><p>校园网登录的时候，修改策略配置，一个一个成员选择，然后登录，都登好之后再全部添加到策略里即可</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft</title>
      <link href="/2022/11/06/program/2022-11-06-Minecraft/"/>
      <url>/2022/11/06/program/2022-11-06-Minecraft/</url>
      
        <content type="html"><![CDATA[<p>昨晚和欣欣一起玩了我的世界，只有网易版的，mac上还不能玩，而且移动端和PC端数据还不互通，故想着自己搭一个服务器来玩，记录一下安装过程。</p><p>论坛：<a href="https://klpbbs.com/">苦力怕</a>，<a href="https://www.mcbbs.net/portal.php">我的世界中文论坛</a><br>下载站：<a href="https://www.9minecraft.cn/">9minecraft</a>，<a href="http://www.minecraftxz.com/">minecraftxz</a></p><h2 id="1-服务端安装"><a href="#1-服务端安装" class="headerlink" title="1. 服务端安装"></a>1. 服务端安装</h2><p>服务端教程：<a href="https://mhy278.github.io/MinecraftServerHostGuideHtml/">我的世界服务器搭建指南</a><br>跟着教程走就可以了，记得要放行端口，选择paper核心</p><p>安装好之后，在服务器后台输入<code>op 玩家名</code>将其设置为管理员，可以使用插件的命令，在后台输入插件命令时无需<code>/</code>，在游戏客户端输入时需要加<code>/</code></p><h2 id="2-插件安装"><a href="#2-插件安装" class="headerlink" title="2. 插件安装"></a>2. 插件安装</h2><p><a href="https://dev.bukkit.org/bukkit-plugins">插件大全</a><br>这个才是重点，目前安装了以下几个插件：   </p><h3 id="1-HuskHomes"><a href="#1-HuskHomes" class="headerlink" title="1.HuskHomes"></a>1.HuskHomes</h3><p><a href="https://github.com/WiIIiam278/HuskHomes2">下载地址</a><br>设置home并传送</p><h3 id="2-mypermissions"><a href="#2-mypermissions" class="headerlink" title="2.mypermissions"></a>2.mypermissions</h3><p><a href="https://dev.bukkit.org/projects/mypermissions">下载地址</a><br>权限管理,还没用过</p><h3 id="3-gm-switch"><a href="#3-gm-switch" class="headerlink" title="3.gm-switch"></a>3.gm-switch</h3><p><a href="https://dev.bukkit.org/projects/gm-switch">下载地址</a><br>更改游戏模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#0是生存模式，1是创造模式</span></span><br><span class="line">/gm &lt;0/1/2/3&gt; </span><br></pre></td></tr></table></figure><h3 id="4-time-set"><a href="#4-time-set" class="headerlink" title="4.time-set"></a>4.time-set</h3><p><a href="https://dev.bukkit.org/projects/time-set">下载地址</a><br>更改游戏时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/tsd - time <span class="built_in">set</span> day</span><br><span class="line">/tsno - time <span class="built_in">set</span> noon</span><br><span class="line">/tsni -time <span class="built_in">set</span> night</span><br><span class="line">/tsm - time <span class="built_in">set</span> midnight</span><br><span class="line">/tsh - <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="5-Geyser间歇泉"><a href="#5-Geyser间歇泉" class="headerlink" title="5. Geyser间歇泉"></a>5. Geyser间歇泉</h3><p><a href="https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/">下载地址</a><br>让JAVA版和基岩版数据互通，PC是JAVA版，移动端(Android和ios)是基岩版，不然移动端无法进入服务器。<br>下载插件版:Geyser-Spigot.jar<br>相关教程：<a href="https://www.mcbbs.net/forum.php?mod=viewthread&tid=1126347">教程</a>，<a href="https://www.bilibili.com/read/cv8621880">Geyser间歇泉实现Minecraft基岩版/JAVA版互通服</a>，<a href="https://geyser.superiormc.cn/">中文Wiki</a><br>默认端口19132，UDP，记得放心端口   </p><p>再安装Floodgate，无需正版基岩版也可以加入服务器<br><a href="https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/">下载地址</a><br>下载插件版:floodgate-spigot.jar<br>相关教程：<a href="https://geyser.superiormc.cn/">中文Wiki</a></p><h2 id="3-客户端下载"><a href="#3-客户端下载" class="headerlink" title="3.客户端下载"></a>3.客户端下载</h2><h3 id="1-Windows"><a href="#1-Windows" class="headerlink" title="1.Windows"></a>1.Windows</h3><p>下载HMCL启动器即可，<a href="https://www.9minecraft.cn/hmcl/">下载地址</a></p><h3 id="2-MAC"><a href="#2-MAC" class="headerlink" title="2.MAC"></a>2.MAC</h3><p>下载HMCL启动器即可，<a href="https://www.9minecraft.cn/hmcl/">下载地址</a></p><h3 id="3-Android"><a href="#3-Android" class="headerlink" title="3.Android"></a>3.Android</h3><p>苦力怕社区下载即可，<a href="https://klpbbs.com/thread-3-1-1.html">下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frida</title>
      <link href="/2022/09/19/program/2022-09-19-frida/"/>
      <url>/2022/09/19/program/2022-09-19-frida/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误." data-whm="抱歉, 这个文章不能被校验.">  <script id="hbeData" type="hbeData" data-hmacdigest="172f2cad274695f1ec0444b61eeaeeeb3d976d555f90dee4ccf444337ada938e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派</title>
      <link href="/2022/07/06/program/2022-07-06-raspberrypi/"/>
      <url>/2022/07/06/program/2022-07-06-raspberrypi/</url>
      
        <content type="html"><![CDATA[<p>前两天打开QQ，正好看到有人在卖树莓派，4B4G的，200R，最近淘宝上都要700+，果断买下了，加了个运费220，昨天收到玩了玩，记录一下。</p><p>经过这两天的了解，树莓派就相当于一个Linux主机+单片机，Debian系统，单片机可以外接led、测温之类的，功能也很强大，不用单片机的话，也可以当成一个Linux系统，安装各种软件。</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><ol><li>修改apt源<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">用<span class="comment">#注释掉原来的</span></span><br><span class="line">加入一下记录</span><br><span class="line">deb https://mirrors.aliyun.com/debian  stable main contrib non-free</span><br><span class="line">deb https://mirrors.aliyun.com/debian  stable-updates main contrib non-free</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#或者这个 不带桌面的64位PIOS</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian-security/ bullseye-security main</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian-security/ bullseye-security main</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br></pre></td></tr></table></figure></li><li>安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh <span class="comment">#一键安装脚本</span></span><br><span class="line">sudo sh get-docker.sh  --mirror Aliyun <span class="comment">#使用阿里云镜像</span></span><br></pre></td></tr></table></figure>看到下面的提示就是安装成功了，容易卡在倒数第四行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberrypi:~ $ sudo sh get-docker.sh  --mirror Aliyun</span><br><span class="line"><span class="comment"># Executing docker install script, commit: b2e29ef7a9a89840d2333637f7d1900a83e7153f</span></span><br><span class="line">+ sh -c apt-get update -qq &gt;/dev/null</span><br><span class="line">+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl &gt;/dev/null</span><br><span class="line">+ sh -c mkdir -p /etc/apt/keyrings &amp;&amp; chmod -R 0755 /etc/apt/keyrings</span><br><span class="line">+ sh -c curl -fsSL <span class="string">&quot;https://mirrors.aliyun.com/docker-ce/linux/debian/gpg&quot;</span> | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg</span><br><span class="line">+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class="line">+ sh -c <span class="built_in">echo</span> <span class="string">&quot;deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.aliyun.com/docker-ce/linux/debian bullseye stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span><br><span class="line">+ sh -c apt-get update -qq &gt;/dev/null</span><br><span class="line">+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin &gt;/dev/null</span><br><span class="line">+ version_gte 20.10</span><br><span class="line">+ [ -z  ]</span><br><span class="line">+ <span class="built_in">return</span> 0</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>启动配置Docker<br>启动Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>开启Docker自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p>查看Docker当前状态，可以看到状态为active（running）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure></li><li><p>修改源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/docker/daemon.json</span><br><span class="line"><span class="comment"># 写入以下内容</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://w76qpozk.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 重启docker</span></span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure></li><li><p>安装镜像<br>以青龙为例</p><ol><li>直接从Dockerhub仓库拉取青龙面板最新镜像 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull whyour/qinglong:latest <span class="comment">#拉取镜像</span></span><br></pre></td></tr></table></figure></li><li>部署青龙面板<br>前面为把本地文件挂载到qinglong容器，这里的端口映射为5700，如果需要修改可以自行修改，修改格式为xxxx:5700。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -dit \</span><br><span class="line">-v <span class="variable">$PWD</span>/Desktop/ql/config:/ql/config \</span><br><span class="line">-v <span class="variable">$PWD</span>/Desktop/ql/<span class="built_in">log</span>:/ql/<span class="built_in">log</span> \</span><br><span class="line">-v <span class="variable">$PWD</span>/Desktop/ql/db:/ql/db \</span><br><span class="line">-v <span class="variable">$PWD</span>/Desktop/ql/scripts:/ql/scripts \</span><br><span class="line">-v <span class="variable">$PWD</span>/Desktop/ql/repo:/ql/repo \</span><br><span class="line">-p 9000:5700 \</span><br><span class="line">--name qinglong \</span><br><span class="line">--hostname qinglong \</span><br><span class="line">--restart always \</span><br><span class="line">whyour/qinglong:latest</span><br></pre></td></tr></table></figure></li><li>拉库和配置</li></ol><ul><li><p>添加环境变量<code>JD_COOKIE</code></p></li><li><p>安装依赖，NodeJS的这几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jsdom</span><br><span class="line">png-js</span><br><span class="line">axios</span><br><span class="line">date-fns</span><br><span class="line">moment</span><br></pre></td></tr></table></figure></li><li><p>修改<code>配置文件</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第20行</span></span><br><span class="line">GithubProxyUrl=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 第90行 通知,自己填</span></span><br></pre></td></tr></table></figure></li><li><p>拉库</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https://github.com/KingRan/KR.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span></span><br></pre></td></tr></table></figure><p>  Github打不开用下面的代码</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ql repo https://gh.fakev.cn/KingRan/KR.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者：</span></span><br><span class="line">ql repo https://gh.fakev.cn/KingRan/KR.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span></span><br></pre></td></tr></table></figure><p>  或者</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ql repo https://github.com/zero205/JD_tencent_scf.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;backUp|icon&quot;</span> <span class="string">&quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot;</span> <span class="string">&quot;main&quot;</span></span><br><span class="line"></span><br><span class="line">ql repo https://hub.fastgit.xyz/zero205/JD_tencent_scf.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;backUp|icon&quot;</span> <span class="string">&quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot;</span> <span class="string">&quot;main&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberry Pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国外小机安装的软件</title>
      <link href="/2022/06/22/program/2022-06-28-linuxsoftware/"/>
      <url>/2022/06/22/program/2022-06-28-linuxsoftware/</url>
      
        <content type="html"><![CDATA[<p>记录一下安装的软件</p><h3 id="宝塔"><a href="#宝塔" class="headerlink" title="宝塔"></a>宝塔</h3><p>centos7.9安装下面的脚本时报错，而且Nginx装不上，可以更新下yum再装<br>1.更新YUM仓库源为阿里云镜像源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure><p>将内容替换为以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Updates - mirrors.aliyun.com</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Extras - mirrors.aliyun.com</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Plus - mirrors.aliyun.com</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><p>2.清理并重建缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum clean all</span><br><span class="line">sudo yum makecache</span><br><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#宝塔面板7.7原版第三方存档</span></span><br><span class="line">纯原版1：curl -sSO https://raw.githubusercontent.com/zhucaidan/btpanel-v7.7.0/main/install/install_panel.sh &amp;&amp; bash install_panel.sh</span><br><span class="line">纯原版2：wget -O install.sh http://f.cccyun.cc/bt/install_6.0.sh &amp;&amp; bash install.sh</span><br><span class="line">升级(降级)到7.7命令： curl http://f.cccyun.cc/bt/update6.sh|bash</span><br><span class="line"></span><br><span class="line">&lt;!--宝塔7.7原版一键开心脚本--&gt;</span><br><span class="line">curl -sSO https://raw.githubusercontent.com/ztkink/bthappy/main/one_key_happy.sh &amp;&amp; bash one_key_happy.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 宝塔linux工具箱优化脚本</span></span><br><span class="line">一键修改宝塔面板模板、去除强制登陆、一键修复面板、一键更换yum源、清除系统垃圾缓存、系统优化等</span><br><span class="line">https://gitee.com/gacjie/btpanel_tools</span><br><span class="line">wget -O btpanel_tools.sh https://download.btpanel.cm/tools/btpanel_tools.sh &amp;&amp; bash btpanel_tools.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#宝塔面板一键优化补丁 -彩虹</span></span><br><span class="line">1.去除宝塔面板强制绑定账号</span><br><span class="line">2.去除各种删除操作时的计算题与延时等待</span><br><span class="line">3.去除创建网站自动创建的垃圾文件（index.html、404.html、.htaccess）</span><br><span class="line">4.关闭未绑定域名提示页面，防止有人访问未绑定域名直接看出来是用的宝塔面板</span><br><span class="line">5.关闭活动推荐与在线客服</span><br><span class="line">6.去除自动校验文件与上报信息定时任务</span><br><span class="line">7.去除面板日志与网站绑定域名上报</span><br><span class="line">适用7.7版本：wget -O optimize.sh http://f.cccyun.cc/bt/optimize.sh &amp;&amp; bash optimize.sh</span><br><span class="line">适用7.9版本：wget -O optimize.sh http://f.cccyun.cc/bt/optimize_new.sh &amp;&amp; bash optimize.sh</span><br></pre></td></tr></table></figure><p>如果<code>nginx</code>启动失败，可以执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install lua*</span><br></pre></td></tr></table></figure><h3 id="v2ray"><a href="#v2ray" class="headerlink" title="v2ray"></a>v2ray</h3><p>用的一键脚本，有tg群，后面执行<code>vasma</code>就可以打开脚本了，现在选的是<code>v2ray-core</code>+<code>VLESS+TLS+WS</code>，记得放行<code>443</code>端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mack<span class="_">-a</span>/v2ray-agent</span><br><span class="line"></span><br><span class="line">wget -P /root -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot;</span> &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure><h3 id="Alist"><a href="#Alist" class="headerlink" title="Alist"></a>Alist</h3><p>按照<a href="!https://alist-doc.nn.ci/">官网教程</a>来就行<br>设置守护进程时把配置文件路径改成alist的路径/data/config.json</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Windows</title>
      <link href="/2021/08/26/program/2021-08-22-linuxTowindows/"/>
      <url>/2021/08/26/program/2021-08-22-linuxTowindows/</url>
      
        <content type="html"><![CDATA[<p>前几天在YouTube上看到Linux系统DD成Windows，正好把我那台RN的vps换成Windows，带宽还高，美滋滋。</p><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><p>找工具就找了好久，搜到的大部分已经失效了，应该是windows的iso下载链接失效了，<br>最后找到了两个可以用的，linux系统都选 <strong>Debian 10</strong>,win尽量选<strong>windows2012R2</strong></p><ol><li><p><a href="https://github.com/MeowLove/Network-Reinstall-System-Modify">MeowLove/Network-Reinstall-System-Modify</a>，按照<a href="https://www.cxthhhhh.com/network-reinstall-system-modify">教程</a>来就好</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO ~/Network-Reinstall-System-Modify.sh <span class="string">&#x27;https://www.cxthhhhh.com/CXT-Library/Network-Reinstall-System-Modify/Network-Reinstall-System-Modify.sh&#x27;</span> &amp;&amp; chmod a+x ~/Network-Reinstall-System-Modify.sh</span><br><span class="line"></span><br><span class="line">bash ~/Network-Reinstall-System-Modify.sh -UI_Options</span><br></pre></td></tr></table></figure><p> 半个小时就可以把系统装好，期间可以通过VNC查看进度，默认用户名：<strong>Administrator</strong>，密码：<strong>cxthhhhh.com</strong>，可以通过命令行改一下密码：<code>net user administrator new_pwd</code><br> 之后就可以配置环境了，主要还是用来下载资源然后上传到Onedrive，用<strong>rclone</strong>挂载到本地就可以了</p></li><li><p><a href="https://sunpma.com/137.html">sunpma大佬的</a>,也把一些文件保存到了学校的od里了，吐过下面的链接失效了可以用自己网盘里的代替。</p><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul><li><p>无限制全自动dd安装Windows；</p></li><li><p>突破没有VNC,没有救援模式,内存比dd包小的限制；</p></li><li><p>使用Debian Live CD中的busybox做中间媒介,经过复杂的处理使本机的网络参数传进Windows操作系统中；</p></li><li><p>即使没有DHCP能够让Windows获取网络参数,也能让Windows操作系统在开机的第一时间能够连通网络；</p></li><li><p>本站所提供的脚本及安装包均来源于网络并通过测试；</p></li><li><p>特别注意：脚本不适用于OpenVZ构架的服务器，请勿尝试；</p><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><h5 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure><h5 id="必要依赖"><a href="#必要依赖" class="headerlink" title="必要依赖"></a>必要依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#Debian&#x2F;Ubuntu:</span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line">#RedHat&#x2F;CentOS:</span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure><h4 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h4><p>示例脚本，补全DD包直连地址后运行即可；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;[Windows DD包直链地址]&#x27;</span></span><br></pre></td></tr></table></figure><details><summary><strong>精简版</strong></summary> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DD Windows Server 2008 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2008R2_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2012 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2012R2_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2016 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2016_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2019 64位 精简版 [账户Administrator密码WinSrv2019dc-Chinese]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2019_64_Administrator_WinSrv2019dc-Chinese.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2022 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2022_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 32位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win7_86_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 sp1 64位 企业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win7_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows8.1 64位 专业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win8.1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2016LTSB 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win10_2016LTSB_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2019LTSC 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win10_2019LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2021LTSC 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win10_2021LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br></pre></td></tr></table></figure></details><details><summary><strong>完整版</strong></summary> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DD Windows Server 2012 R2 Datacenter 64位 [账户administrator密码Password147]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/cn_windows2012r2_administrator_Password147.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2016 Datacenter 64位 [账户administrator密码Password147]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/cn_windows2016_administrator_Password147.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2019 Datacenter 64位 [账户administrator密码Password147]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/cn_windows2019_administrator_Password147.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2022 Datacenter 64位 [账户administrator密码Teddysun.com]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win_Server2022_20344.1_x64_administrator_Teddysun.com.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 Pro 20h1 19043.928 64位 [账户administrator密码Teddysun.com]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win10_Pro_20h1_19043.928_x64_administrator_Teddysun.com.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 Pro 20h2 19042.630 64位 [账户administrator密码Teddysun.com]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win10_Pro_20h2_19042.630_x64_administrator_Teddysun.com.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 sp1 64位 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win7_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows8.1 64位 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win8.1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2019LTSC 64位 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win10_LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2021LTSC 64位 [账户administrator密码Teddysun.com]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win10_2021LTSC_64_administrator_Teddysun.com.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows11 工作站专业版 21H2 64位 [账户administrator密码Teddysun.com]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win11_Pro_for_Workstations_21H2_administrator_Teddysun.com.gz&#x27;</span></span><br></pre></td></tr></table></figure></details><details><summary><strong>Oracle甲骨文</strong></summary> <p>此DD包仅适用于Oracle甲骨文DD安装Windows使用；（注意：不适用于新出的ARM框架机型）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DD Windows7 sp1 64位 企业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win7_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows8.1 64位 企业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win8.1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2016LTSB 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win10_2016LTSB_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2019LTSC 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win10_2019LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2021LTSC 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win10_2021LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2008 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2008R2_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2012 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2012R2_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2016 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2016_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2022 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2022_64_Administrator_nat.ee.gz&#x27;</span></span><br></pre></td></tr></table></figure></details><details><summary><strong>阿里云</strong></summary> <p>以下DD包适用于阿里云DD安装Windows使用；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DD Windows7 32位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Aliyun_Win7_86_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2019LTSC 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Aliyun_Win10_2019LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2021LTSC 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Aliyun_Win10_2021LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br></pre></td></tr></table></figure></details><details><summary><strong>Azure微软云</strong></summary> <p>以下DD包适用于Azure微软云DD安装Windows使用；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DD Windows Server 2008 R2 64位 精简版[账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2008R2_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2012 R2 64位 精简版[账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2012R2_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2016 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2016_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2022 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2022_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 sp1 64位 企业精简版 Hyper-V Xen Nvme [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win7_sp1_64_Hv_Xen_Nvme_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows8.1 64位 适量精简版 [账户Administrator密码Vicer]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win8.1_64_Administrator_Vicer.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2019LTSC 64位 企业适量精简版 [账户Administrator密码Vicer]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://sunpma.com/other/oss/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -dd <span class="string">&#x27;https://oss.sunpma.com/Windows/Win10_2019LTSC_64_Administrator_Vicer.gz&#x27;</span></span><br></pre></td></tr></table></figure></details></li></ul></li></ol><h3 id="遇到的坑："><a href="#遇到的坑：" class="headerlink" title="遇到的坑："></a>遇到的坑：</h3><ul><li><p><strong>不要重启！不要重启！！不要重启！！！</strong> 重要的事说三遍，不知道是机器的原因还是系统的原因，重启之后大概率会进不去了，只能重装系统了，也不要关机，和重启一样的。   </p></li><li><p>可以注销当前用户 再远程连接</p></li><li><p>如果无法连接网络，需要VNC连接后，设置ip、子网掩码(255.255.255.0)、默认网关(前三个和ip一样，最后一位是1)、DNS(1.1.1.1,8.8.8.8)</p><h3 id="远程连接设置代理"><a href="#远程连接设置代理" class="headerlink" title="远程连接设置代理"></a>远程连接设置代理</h3><p>因为VPS在芝加哥，远程连接之后延迟很大，体验很不好，后来找过亚洲的VPS，奈何价格太贵，今天突然想到在远程连接的时候可以设置代理，这样延迟应该就会降低。</p></li></ul><p><strong>工具：SocksCap64</strong></p><ol><li>点击<strong>代理</strong>，添加代理，默认socks 5</li><li>点击<strong>程序</strong>，添加EXE程序，远程桌面的路径在<code>C:\Windows\System32\mstsc.exe</code>添加就可以了。</li></ol><p>果然效果好了很多！</p><h3 id="linux-三网测速"><a href="#linux-三网测速" class="headerlink" title="linux 三网测速"></a>linux 三网测速</h3><p><a href="https://github.com/zq/superspeed">superspeed</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://git.io/superspeed.sh)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coding</title>
      <link href="/2021/08/22/program/2021-08-22-coding/"/>
      <url>/2021/08/22/program/2021-08-22-coding/</url>
      
        <content type="html"><![CDATA[<p>这几天看到好多人因为在<strong>Github Actions</strong>上签到续期被封仓库、甚至封号的，连忙把我续期签到的停止，最近找到了<strong>coding</strong>，也有CI/CD，正好用来签到。<br>和Github不同，在<strong>coding</strong>里叫构建计划，配置文件也不一样，用的<strong>jenkins</strong>，其他的基本一样。<br>机器配置：2h4g/100GB磁盘空间/Ubunt，一次最多30分钟，每个月最多1000分钟，足够了。<br>先在<strong>coding</strong>里新建项目，新建仓库，导入或者上传代码，之后到构建计划中新建计划，配置文件就用最下面的自定义就好，默认的第一步检出意思就是从仓库中拉去代码，之后就是自己的步骤了，<a href="https://help.coding.net/docs/ci/ways.html#vm">不过有很多内置环境比如Python3、Nodejs等</a>，不需要自己再配置了。</p><h2 id="上传仓库"><a href="#上传仓库" class="headerlink" title="上传仓库"></a>上传仓库</h2><p>只需要改一下最后的网址就可以实现上传了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">stage(&quot;push&quot;) &#123;</span><br><span class="line">    steps &#123;</span><br><span class="line">        sh &#39;git add .&#39;</span><br><span class="line">        sh &#39;&#39;&#39;</span><br><span class="line">        git commit -m &quot;Update &#96;date +&quot;%Y-%m-%d %H:%M:%S&quot;&#96; &quot;</span><br><span class="line">        &#39;&#39;&#39;</span><br><span class="line">        sh &quot;git push https:&#x2F;&#x2F;$&#123;PROJECT_TOKEN_GK&#125;:$&#123;PROJECT_TOKEN&#125;@e.coding.net&#x2F;username&#x2F;item&#x2F;repo.git HEAD:master&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><p>目前先弄了office e5续费、京东签到、机场签到三个项目，有其他的再加。</p><h3 id="Office-e5-续费"><a href="#Office-e5-续费" class="headerlink" title="Office e5 续费"></a>Office e5 续费</h3><p>也就是AutoApi，在github上找下载就可以了，大多数都是用<strong>GitHub Actions</strong>运行的，改一下就可以直接用。</p><h3 id="京东签到"><a href="#京东签到" class="headerlink" title="京东签到"></a>京东签到</h3><p>每天通过签到获得京豆，容易黑号，但我的号应该已经黑了，索性不管就挂上了，刚开始每天才十几个豆，后面看看再说吧。<br>Github还是有很多的，最后用的<a href="https://github.com/ruicky/jd_sign_bot">ruicky/jd_sign_bot</a>，Cookie就需要两项：pt_key和pt_token两项，放到环境变量里就可以了。</p><h3 id="机场签到"><a href="#机场签到" class="headerlink" title="机场签到"></a>机场签到</h3><p>机场用的<strong>几鸡</strong>，免费速度也还行，应急用吧，然后自己写了个小爬虫，每天凌晨签到得流量和有效期。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> coding </tag>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wechaty</title>
      <link href="/2021/07/16/program/2021-07-16-wechaty/"/>
      <url>/2021/07/16/program/2021-07-16-wechaty/</url>
      
        <content type="html"><![CDATA[<p>老早就想搞一个微信机器人了，但之前的可爱猫只能在<strong>Windows</strong>上运行，还要下载指定版本微信，怪麻烦的，想着有没有类似<strong>Mirai</strong>之类的可以挂在<strong>Linux</strong>上的机器人。这几天发现了<a href="https://github.com/wechaty/wechaty">Wechaty</a>满足我的需要。<br>这次有了免费的Web版的了，不需要<strong>token</strong>就可以(购买的话200RMB/月，买不起买不起)，我用的<a href="https://github.com/wechaty/python-wechaty">Python-wechaty</a>，先用<strong>docker</strong>启动<strong>wechaty</strong>服务登录微信，在用python连接wechaty进行消息处理。<br>以下教程摘自官方文档。   </p><ol><li><p>启动Web协议服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker pull wechaty/wechaty:latest</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> WECHATY_LOG=<span class="string">&quot;verbose&quot;</span></span><br><span class="line"><span class="built_in">export</span> WECHATY_PUPPET=<span class="string">&quot;wechaty-puppet-wechat&quot;</span></span><br><span class="line"><span class="built_in">export</span> WECHATY_PUPPET_SERVER_PORT=<span class="string">&quot;8080&quot;</span></span><br><span class="line"><span class="built_in">export</span> WECHATY_TOKEN=<span class="string">&quot;python-wechaty-&#123;uuid&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">docker run -ti \</span><br><span class="line">--name wechaty_puppet_service_token_gateway \</span><br><span class="line">--rm \</span><br><span class="line">-e WECHATY_LOG \</span><br><span class="line">-e WECHATY_PUPPET \</span><br><span class="line">-e WECHATY_PUPPET_SERVER_PORT \</span><br><span class="line">-e WECHATY_TOKEN \</span><br><span class="line">-p <span class="string">&quot;<span class="variable">$WECHATY_PUPPET_SERVER_PORT</span>:<span class="variable">$WECHATY_PUPPET_SERVER_PORT</span>&quot;</span> \</span><br><span class="line">wechaty/wechaty:latest</span><br></pre></td></tr></table></figure><p>其中<strong>WECHATY_PUPPET</strong>类似平台比如IPAD、PC等，这里选择Web端。<strong>WECHATY_TOKEN</strong>为自己设定，类似消息密钥，可由<code>import uuid;print(uuid.uuid4());</code>生成</p></li><li><p>连接服务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.environ[<span class="string">&#x27;WECHATY_PUPPET_SERVICE_TOKEN&#x27;</span>]=<span class="string">&quot;python-wechaty-&#123;uuid&#125;&quot;</span></span><br><span class="line">os.environ[<span class="string">&#x27;WECHATY_PUPPET_SERVICE_ENDPOINT&#x27;</span>]=<span class="string">&quot;ip:8084&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> List, Optional, Union</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> wechaty_puppet <span class="keyword">import</span> FileBox  <span class="comment"># type: ignore</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> wechaty <span class="keyword">import</span> Wechaty, Contact</span><br><span class="line"><span class="keyword">from</span> wechaty.user <span class="keyword">import</span> Message, Room</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyBot</span>(<span class="params">Wechaty</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">on_message</span>(<span class="params">self, msg: Message</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        listen for message event</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        from_contact: Optional[Contact] = msg.talker()</span><br><span class="line">        text = msg.text()</span><br><span class="line">        room: Optional[Room] = msg.room()</span><br><span class="line">        <span class="keyword">if</span> text == <span class="string">&#x27;ding&#x27;</span>:</span><br><span class="line">            conversation: Union[</span><br><span class="line">                Room, Contact] = from_contact <span class="keyword">if</span> room <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> room</span><br><span class="line">            <span class="keyword">await</span> conversation.ready()</span><br><span class="line">            <span class="keyword">await</span> conversation.say(<span class="string">&#x27;dong&#x27;</span>)</span><br><span class="line">            file_box = FileBox.from_url(</span><br><span class="line">                <span class="string">&#x27;https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/&#x27;</span></span><br><span class="line">                <span class="string">&#x27;u=1116676390,2305043183&amp;fm=26&amp;gp=0.jpg&#x27;</span>,</span><br><span class="line">                name=<span class="string">&#x27;ding-dong.jpg&#x27;</span>)</span><br><span class="line">            <span class="keyword">await</span> conversation.say(file_box)</span><br><span class="line"></span><br><span class="line">asyncio.run(MyBot().start())</span><br></pre></td></tr></table></figure><p>给机器人发送<code>ding</code>，会回复<code>dong</code>加一张图片。</p></li></ol><p>之后再探索出别的我再写，先这样</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人网盘</title>
      <link href="/2021/05/15/program/2021-05-15-cloudreve/"/>
      <url>/2021/05/15/program/2021-05-15-cloudreve/</url>
      
        <content type="html"><![CDATA[<p>这几天看私人网盘的搭建，自己也想弄一个，就去找了教程</p><h2 id="储存"><a href="#储存" class="headerlink" title="储存"></a>储存</h2><p>网盘最重要的部分就是储存了，网盘里会有很多文件，占用的空间也会很多，而且还要保证速度，还要便宜。<br>作为白嫖党，最终由三个可以选择：<strong>Onedrive、Google Drive、阿里网盘</strong><br>前两个本以为有<strong>edu</strong>邮箱会有很大的储存空间，结果。。。</p><h3 id="Onedirve"><a href="#Onedirve" class="headerlink" title="Onedirve"></a>Onedirve</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p> 用<strong>edu</strong>邮箱注册后确实会有1TB的储存空间，但由于国内学校一半都没有管理员，因此没有API权限，不能进行第三方挂载，也就是只能用官方的APP，有些不方便。<br>但<strong>Onemanager</strong>可以用sharepoint来进行挂载，搭配上<strong>Heroku</strong>和<strong>Cloudflare</strong>体验也还不错，但只能上传和预览，无法删除移动等。 </p><h4 id="开发者"><a href="#开发者" class="headerlink" title="开发者"></a>开发者</h4><p>意外得知 office 365 e5开发者也有5TB的空间，不过需要调用API活跃才能续期，每次三个月，可以用Github action 来刷。<br>tips:最好再注册几个子账号来进行之后的操作，比如刷API一个账号，Cloudreve一个账号<br><a href="https://51.ruyo.net/16002.html">申请教程</a></p><h5 id="基本流程："><a href="#基本流程：" class="headerlink" title="基本流程："></a>基本流程：</h5><ul><li>先注册个人账号</li><li><a href="https://51.ruyo.net/16002.html">完善信息</a></li><li><a href="https://developer.microsoft.com/zh-cn/microsoft-365/profile">申请成为开发者</a>，国家选择美国</li><li>点击【SET UP E5 SUBSCRIPTION】填写要申请的订阅信息！需要验证手机，需要翻墙</li><li><a href="https://portal.office.com/">管理平台</a>，要用刚申请的<strong>onmicrosoft.com</strong>账号登录</li></ul><h5 id="挂载到本地"><a href="#挂载到本地" class="headerlink" title="挂载到本地"></a>挂载到本地</h5><p><a href="https://blog.csdn.net/LB_AUTO/article/details/105751277">教程</a><br>三个软件都装好<br>主要是开机挂载部分，新建<strong>rclone.bat</strong>文件，写入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start D:\software\Git\git-bash.exe -c &quot;rclone mount onedrive名字:/  E: --cache-dir D:\onedrive --vfs-cache-mode writes --vfs-cache-max-age 15m &amp;&quot;</span><br></pre></td></tr></table></figure><p>分别填好git-bash的地址和当初新建配置时起的名字，然后放到下面的文件夹里就可以了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span></span><br></pre></td></tr></table></figure><h5 id="刷-API"><a href="#刷-API" class="headerlink" title="刷 API"></a>刷 API</h5><p><a href="https://github.com/dlytang/office365">https://github.com/dlytang/office365</a><br>回调地址<strong><a href="http://localhost:53682/">http://localhost:53682/</a></strong><br>其中refresh_token 用rclone 获取</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone authorize &quot;cilent_id&quot; &quot;cilent_serect&quot;</span><br></pre></td></tr></table></figure><p> 跳转登录获取<strong>refresh_token</strong></p><h3 id="Google-Drive"><a href="#Google-Drive" class="headerlink" title="Google Drive"></a>Google Drive</h3><p>本来以为会有学生版，但忘记它是一个不存在的网站，国内基本没有学校配备了Google的相关服务，其他的也就无从谈起。</p><h3 id="阿里网盘"><a href="#阿里网盘" class="headerlink" title="阿里网盘"></a>阿里网盘</h3><p>没有官方API，也都是抓包得到的，因此不太稳定，但也可以用</p><p>最后也只有<strong>Onedirve</strong>和<strong>阿里网盘</strong>可以尝试了。</p><h2 id="Web挂载"><a href="#Web挂载" class="headerlink" title="Web挂载"></a>Web挂载</h2><p>共有三种</p><h3 id="Onepoint"><a href="#Onepoint" class="headerlink" title="Onepoint"></a>Onepoint</h3><p><a href="https://github.com/ukuq/onepoint">https://github.com/ukuq/onepoint</a><br>在服务器上我是没部署成功，但<strong>cloudflare</strong>部署成了，两个网盘都可以配置。</p><h4 id="阿里网盘-1"><a href="#阿里网盘-1" class="headerlink" title="阿里网盘"></a>阿里网盘</h4><p>无法上传文件，只可以在线预览分享等。</p><h4 id="Onedrive"><a href="#Onedrive" class="headerlink" title="Onedrive"></a>Onedrive</h4><p>用开发者账号也可以配置，可以直接看到目录，不过后面有更好的，作为备用也可以</p><h3 id="Onemanager"><a href="#Onemanager" class="headerlink" title="Onemanager"></a>Onemanager</h3><p><a href="https://github.com/qkqpttgf/OneManager-php">https://github.com/qkqpttgf/OneManager-php</a><br>利用<strong>Heroku</strong>即可部署<br>但只成功部署了<strong>sharepoint</strong>的分享链接，调用API的没有成功部署</p><h3 id="Cloudreve"><a href="#Cloudreve" class="headerlink" title="Cloudreve"></a>Cloudreve</h3><p>最终选择<br><a href="https://github.com/cloudreve/Cloudreve">https://github.com/cloudreve/Cloudreve</a></p><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><p>这个没办法直接获取到Onedirve里的目录等，但可以手动导入一下，也还算可以，其他的都很好，预览、注册、上传等等。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><a href="https://docs.cloudreve.org/">官方教程</a><br>直接下载运行即可，第一次运行之后会生成一个ini配置文件，可以改端口、数据库等<br>这里记录一下nginx配置过程。<br>cloudreve挂载onedrive需要https，阿里云申请一个免费的即可，之后下载上传到服务器中。<br>nginx的配置(配置了好久)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name 你的网址;</span><br><span class="line">    proxy_set_header REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line">    ssl_certificate      ssl证书.pem;</span><br><span class="line">    ssl_certificate_key  ssl证书.key;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; <span class="comment">#表示使用的TLS协议的类型。</span></span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://127.0.0.1:5003; <span class="comment"># 注意端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># http转发https</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name 你的网址;</span><br><span class="line">        rewrite ^/(.*)$ https://你的网址:443/<span class="variable">$1</span> permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置好之后尽量先把nginx停止再启动，不要用重启</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2021/05/08/program/2021-05-08-docker/"/>
      <url>/2021/05/08/program/2021-05-08-docker/</url>
      
        <content type="html"><![CDATA[<p>这几天学了一下docker的相关知识，记录一下</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官网有<a href="https://docs.docker.com/engine/install/centos/">教程</a></p><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                docker-client \</span><br><span class="line">                docker-client-latest \</span><br><span class="line">                docker-common \</span><br><span class="line">                docker-latest \</span><br><span class="line">                docker-latest-logrotate \</span><br><span class="line">                docker-logrotate \</span><br><span class="line">                docker-engine</span><br></pre></td></tr></table></figure><h3 id="安装新版本"><a href="#安装新版本" class="headerlink" title="安装新版本"></a>安装新版本</h3><p>需要centos7版本以上的</p><p>安装一些必要的系统工具:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>添加软件源信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装 Docker-ce：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker-ce</span><br></pre></td></tr></table></figure><p>启动 Docker 后台服务:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><h3 id="Docker镜像加速"><a href="#Docker镜像加速" class="headerlink" title="Docker镜像加速"></a>Docker镜像加速</h3><p>在拉取Docker镜像时如果未指明镜像地址则默认从docker-hub上拉取，国内访问docker-hub的速度较慢，所以需要将docker源更改为国内的源。<br>配置/etc/docker/daemon.json即可，我使用的是阿里云的源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://w76qpozk.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>保存配置后需要重启服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><ul><li><p>查看容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看运行中的容器</span></span><br><span class="line">docker ps </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有容器</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li><li><p>删除镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id</span><br></pre></td></tr></table></figure></li><li><p>查看镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li><li><p>删除镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 镜像id</span><br></pre></td></tr></table></figure></li><li><p>进入容器内部   </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器id /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>构建Dockerfile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t runoob/ubuntu:v1 . </span><br></pre></td></tr></table></figure><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><p><a href="https://www.cnblogs.com/panwenbin-logs/p/8007348.html">原文</a></p><h3 id="Dockerfile的基本结构"><a href="#Dockerfile的基本结构" class="headerlink" title="Dockerfile的基本结构"></a>Dockerfile的基本结构</h3><p>Dockerfile 一般分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令，”#” 为 Dockerfile 中的注释。</p></li></ul><h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><ul><li><h4 id="FROM：指定基础镜像，必须为第一个命令"><a href="#FROM：指定基础镜像，必须为第一个命令" class="headerlink" title="FROM：指定基础镜像，必须为第一个命令"></a>FROM：指定基础镜像，必须为第一个命令</h4><p>指定基础镜像，必须为第一个命令</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">FROM</span> &lt;image&gt;</span><br><span class="line">    <span class="keyword">FROM</span> &lt;image&gt;:&lt;tag&gt;</span><br><span class="line">    <span class="keyword">FROM</span> &lt;image&gt;@&lt;digest&gt;</span><br><span class="line"><span class="comment">#示例：　　</span></span><br><span class="line">    <span class="keyword">FROM</span> mysql:<span class="number">5.6</span></span><br><span class="line">    <span class="comment"># 注:tag或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像</span></span><br></pre></td></tr></table></figure></li><li><h4 id="MAINTAINER-维护者信息"><a href="#MAINTAINER-维护者信息" class="headerlink" title="MAINTAINER: 维护者信息"></a>MAINTAINER: 维护者信息</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">MAINTAINER</span> name&lt;email address&gt;</span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">    <span class="keyword">MAINTAINER</span> DLYT&lt;xxx@<span class="number">163</span>.com&gt;</span><br></pre></td></tr></table></figure></li><li><h4 id="RUN：构建镜像时执行的命令"><a href="#RUN：构建镜像时执行的命令" class="headerlink" title="RUN：构建镜像时执行的命令"></a>RUN：构建镜像时执行的命令</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#RUN用于在镜像容器中执行命令，其有以下两种命令执行方式：</span></span><br><span class="line"><span class="comment">#shell执行</span></span><br><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">RUN</span><span class="bash"> &lt;<span class="built_in">command</span>&gt;</span></span><br><span class="line"><span class="comment">#exec执行</span></span><br><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="string">&quot;param2&quot;</span>]</span></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">    <span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="string">&quot;param2&quot;</span>]</span></span><br><span class="line">    <span class="keyword">RUN</span><span class="bash"> apk update</span></span><br><span class="line">    <span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;/etc/execfile&quot;</span>, <span class="string">&quot;arg1&quot;</span>, <span class="string">&quot;arg1&quot;</span>]</span></span><br><span class="line"><span class="comment">#注RUN指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，可以在构建时指定--no-cache参数，如：docker build --no-cache</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ADD：将本地文件添加到容器中，tar类型文件会自动解压-网络压缩资源不会被解压-，可以访问网络资源，类似wget"><a href="#ADD：将本地文件添加到容器中，tar类型文件会自动解压-网络压缩资源不会被解压-，可以访问网络资源，类似wget" class="headerlink" title="ADD：将本地文件添加到容器中，tar类型文件会自动解压(网络压缩资源不会被解压)，可以访问网络资源，类似wget"></a>ADD：将本地文件添加到容器中，tar类型文件会自动解压(网络压缩资源不会被解压)，可以访问网络资源，类似wget</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">ADD</span><span class="bash"> &lt;src&gt;... &lt;dest&gt;</span></span><br><span class="line">    <span class="keyword">ADD</span><span class="bash"> [<span class="string">&quot;&lt;src&gt;&quot;</span>,... <span class="string">&quot;&lt;dest&gt;&quot;</span>] <span class="comment">#用于支持包含空格的路径</span></span></span><br><span class="line"><span class="comment">#示例:</span></span><br><span class="line">    <span class="comment"># 添加所有以&quot;hom&quot;开头的文件</span></span><br><span class="line">    <span class="keyword">ADD</span><span class="bash"> hom* /mydir/  </span></span><br><span class="line">    <span class="comment"># ? 替代一个单字符,例如：&quot;home.txt&quot;        </span></span><br><span class="line">    <span class="keyword">ADD</span><span class="bash"> hom?.txt /mydir/      </span></span><br><span class="line">    <span class="comment"># 添加 &quot;test&quot; 到 `WORKDIR`/relativeDir/</span></span><br><span class="line">    <span class="keyword">ADD</span><span class="bash"> <span class="built_in">test</span> relativeDir/ </span></span><br><span class="line">    <span class="comment"># 添加 &quot;test&quot; 到 /absoluteDir/    </span></span><br><span class="line">    <span class="keyword">ADD</span><span class="bash"> <span class="built_in">test</span> /absoluteDir/    </span></span><br></pre></td></tr></table></figure></li><li><h4 id="COPY：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源"><a href="#COPY：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源" class="headerlink" title="COPY：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源"></a>COPY：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源</h4></li><li><h4 id="CMD：构建容器后调用，也就是在容器启动时才进行调用"><a href="#CMD：构建容器后调用，也就是在容器启动时才进行调用" class="headerlink" title="CMD：构建容器后调用，也就是在容器启动时才进行调用"></a>CMD：构建容器后调用，也就是在容器启动时才进行调用</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式：</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;executable&quot;</span>,<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>] (执行可执行文件，优先)</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>] (设置了ENTRYPOINT，则直接调用ENTRYPOINT添加参数)</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> <span class="built_in">command</span> param1 param2 (执行shell内部命令)</span></span><br><span class="line"><span class="comment"># 示例：</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;This is a test.&quot;</span> | wc -</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;/usr/bin/wc&quot;</span>,<span class="string">&quot;--help&quot;</span>]</span></span><br><span class="line"><span class="comment"># 注：CMD不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ENTRYPOINT：配置容器，使其可执行化。配合CMD可省去”application”，只使用参数"><a href="#ENTRYPOINT：配置容器，使其可执行化。配合CMD可省去”application”，只使用参数" class="headerlink" title="ENTRYPOINT：配置容器，使其可执行化。配合CMD可省去”application”，只使用参数"></a>ENTRYPOINT：配置容器，使其可执行化。配合CMD可省去”application”，只使用参数</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;param1&quot;</span>, <span class="string">&quot;param2&quot;</span>] (可执行文件, 优先)</span></span><br><span class="line">    <span class="keyword">ENTRYPOINT</span><span class="bash"> <span class="built_in">command</span> param1 param2 (shell内部命令)</span></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">    <span class="keyword">FROM</span> ubuntu</span><br><span class="line">    <span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;top&quot;</span>, <span class="string">&quot;-b&quot;</span>]</span></span><br><span class="line">    <span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;-c&quot;</span>]</span></span><br><span class="line"><span class="comment">#注：ENTRYPOINT与CMD非常类似，不同的是通过docker run执行的命令不会覆盖ENTRYPOINT，而docker run命令中指定的任何参数，都会被当做参数再次传递给ENTRYPOINT。Dockerfile中只允许有一个ENTRYPOINT命令，多指定时会覆盖前面的设置，而只执行最后的ENTRYPOINT指令。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="LABEL：用于为镜像添加元数据"><a href="#LABEL：用于为镜像添加元数据" class="headerlink" title="LABEL：用于为镜像添加元数据"></a>LABEL：用于为镜像添加元数据</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">LABEL</span><span class="bash"> &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; ...</span></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">　　<span class="keyword">LABEL</span><span class="bash"> version=<span class="string">&quot;1.0&quot;</span> description=<span class="string">&quot;这是一个Web服务器&quot;</span> by=<span class="string">&quot;IT笔录&quot;</span></span></span><br><span class="line"><span class="comment">#注:使用LABEL指定元数据时，一条LABEL指定可以指定一或多条元数据，指定多条元数据时不同元数据之间通过空格分隔。推荐将所有的元数据通过一条LABEL指令指定，以免生成过多的中间镜像。</span></span><br></pre></td></tr></table></figure></li><li><h4 id="ENV：设置环境变量"><a href="#ENV：设置环境变量" class="headerlink" title="ENV：设置环境变量"></a>ENV：设置环境变量</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">ENV</span> &lt;key&gt; &lt;value&gt;  <span class="comment">#&lt;key&gt;之后的所有内容均会被视为其&lt;value&gt;的组成部分，因此，一次只能设置一个变量</span></span><br><span class="line">    <span class="keyword">ENV</span> &lt;key&gt;=&lt;value&gt; ...  <span class="comment">#可以设置多个变量，每个变量为一个&quot;&lt;key&gt;=&lt;value&gt;&quot;的键值对，如果&lt;key&gt;中包含空格，可以使用\来进行转义，也可以通过&quot;&quot;来进行标示；另外，反斜线也可以用于续行</span></span><br><span class="line"><span class="comment"># 示例：</span></span><br><span class="line">    <span class="keyword">ENV</span> myName John Doe</span><br><span class="line">    <span class="keyword">ENV</span> myDog Rex The Dog</span><br><span class="line">    <span class="keyword">ENV</span> myCat=fluffy</span><br></pre></td></tr></table></figure></li><li><h4 id="EXPOSE：指定于外界交互的端口"><a href="#EXPOSE：指定于外界交互的端口" class="headerlink" title="EXPOSE：指定于外界交互的端口"></a>EXPOSE：指定于外界交互的端口</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">EXPOSE</span> &lt;port&gt; [&lt;port&gt;...]</span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">    <span class="keyword">EXPOSE</span> <span class="number">80</span> <span class="number">443</span></span><br><span class="line">    <span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line">    <span class="keyword">EXPOSE</span> <span class="number">11211</span>/tcp <span class="number">11211</span>/udp</span><br><span class="line"><span class="comment">#注:EXPOSE并不会让容器的端口访问到主机。要使其可访问，需要在docker run运行容器时通过-p来发布这些端口，或通过-P参数来发布EXPOSE导出的所有端口</span></span><br></pre></td></tr></table></figure></li><li><h4 id="VOLUME：用于指定持久化目录"><a href="#VOLUME：用于指定持久化目录" class="headerlink" title="VOLUME：用于指定持久化目录"></a>VOLUME：用于指定持久化目录</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;/path/to/dir&quot;</span>]</span></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">    <span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;/data&quot;</span>]</span></span><br><span class="line">    <span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;/var/www&quot;</span>, <span class="string">&quot;/var/log/apache2&quot;</span>, <span class="string">&quot;/etc/apache2&quot;</span>]</span></span><br><span class="line"><span class="comment">#注:一个卷可以存在于一个或多个容器的指定目录，该目录可以绕过联合文件系统，并具有以下功能：</span></span><br><span class="line"><span class="comment"># 1 卷可以容器间共享和重用</span></span><br><span class="line"><span class="comment"># 2 容器并不一定要和其它容器共享卷</span></span><br><span class="line"><span class="comment"># 3 修改卷后会立即生效</span></span><br><span class="line"><span class="comment"># 4 对卷的修改不会对镜像产生影响</span></span><br><span class="line"><span class="comment"># 5 卷会一直存在，直到没有任何容器在使用它</span></span><br></pre></td></tr></table></figure></li><li><h4 id="WORKDIR：工作目录，类似于cd命令"><a href="#WORKDIR：工作目录，类似于cd命令" class="headerlink" title="WORKDIR：工作目录，类似于cd命令"></a>WORKDIR：工作目录，类似于cd命令</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">    <span class="keyword">WORKDIR</span><span class="bash"> /path/to/workdir</span></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">    <span class="keyword">WORKDIR</span><span class="bash"> /a  (这时工作目录为/a)</span></span><br><span class="line">    <span class="keyword">WORKDIR</span><span class="bash"> b  (这时工作目录为/a/b)</span></span><br><span class="line">    <span class="keyword">WORKDIR</span><span class="bash"> c  (这时工作目录为/a/b/c)</span></span><br><span class="line"><span class="comment">#注:通过WORKDIR设置工作目录后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT、ADD、COPY等命令都会在该目录下执行。在使用docker run运行容器时，可以通过-w参数覆盖构建时所设置的工</span></span><br></pre></td></tr></table></figure><h3 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h3><p>docker build [OPTIONS]上下文路径|URL</p></li><li><p>[OPTIONS]：通常指令包括-t，用来指定image的名字。-f指定Dockfile的上下文路径。</p></li><li><p>上下文路径|URL：上下文路径，如果只有一个小圆点 “.” 代表当前目录。    </p></li></ul><p>示例 构建一个名字为 <code>webtest</code> 的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker bulid -t  webtest .  </span><br></pre></td></tr></table></figure><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><p>基本格式</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">dockercloud/hello-world</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">front-tier</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">back-tier</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">my_volumes:/usr/local/bin</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">back-tier</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">lb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">dockercloud/haproxy</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">front-tier</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">back-tier</span></span><br><span class="line">    <span class="attr">volumes:</span> <span class="comment"># 宿主机与容器内目录共享</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span> </span><br><span class="line"><span class="attr">volumes:</span> <span class="comment"># 声明上面创建的卷名</span></span><br><span class="line">  <span class="attr">my_volumes:</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">front-tier:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">  <span class="attr">back-tier:</span></span><br><span class="line"><span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><p>可以看到一份标准配置文件应该包含 <code>version</code>、<code>services</code>、<code>networks</code> 三大部分，其中最关键的就是 <code>services</code> 和 <code>networks</code> 两个部分，下面我们来看其书写规则。</p><h3 id="services"><a href="#services" class="headerlink" title="services"></a>services</h3><ul><li><h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hello-world</span></span><br></pre></td></tr></table></figure><p>在 <code>services</code> 标签下的第二级标签是 web，这个名字是用户自己自定义，它就是服务名称。<br>image 则是指定服务的镜像名称或镜像 ID。如果镜像在本地不存在，Compose 将会尝试拉取这个镜像。</p></li><li><h4 id="container-name"><a href="#container-name" class="headerlink" title="container_name"></a>container_name</h4><p>相当于docker build 中的 –name</p></li></ul><ul><li><h4 id="depends-on"><a href="#depends-on" class="headerlink" title="depends_on"></a>depends_on</h4><p>在使用 Compose 时，最大的好处就是少打启动命令，但是一般项目容器启动的顺序是有要求的，如果直接从上到下启动容器，必然会因为容器依赖问题而启动失败。<br>例如在没启动数据库容器的时候启动了应用容器，这时候应用容器会因为找不到数据库而退出，为了避免这种情况我们需要加入一个标签，就是 depends_on，这个标签解决了容器的依赖、启动先后的问题。<br>例如下面容器会先启动 redis 和 db 两个服务，最后才启动 web 服务：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres</span></span><br></pre></td></tr></table></figure></li><li><h4 id="links"><a href="#links" class="headerlink" title="links"></a>links</h4><p>还记得上面的depends_on吧，那个标签解决的是启动顺序问题，这个标签解决的是容器连接问题，与Docker client的–link一样效果，会连接到其它服务中的容器。<br>格式如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">db:database</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">redis</span></span><br></pre></td></tr></table></figure><p>使用的别名将会自动在服务容器中的/etc/hosts里创建。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">172.12.2.186  db</span><br><span class="line">172.12.2.186  database</span><br><span class="line">172.12.2.187  redis</span><br></pre></td></tr></table></figure><p>相应的环境变量也将被创建。</p></li><li><h4 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h4><p>这个标签的作用是设置镜像变量，它可以保存变量到镜像里面，也就是说启动的容器也会包含这些变量设置，这是与 arg 最大的不同。<br>一般 arg 标签的变量仅用在构建过程中。而 environment 和 Dockerfile 中的 ENV 指令一样会把变量一直保存在镜像、容器中，类似 docker run -e 的效果。</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="attr">RACK_ENV:</span> <span class="string">development</span></span><br><span class="line">  <span class="attr">SHOW:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">  <span class="attr">SESSION_SECRET:</span></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RACK_ENV=development</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">SHOW=&#x27;true&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">SESSION_SECRET=</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="ports"><a href="#ports" class="headerlink" title="ports"></a>ports</h4><p>映射端口的标签。<br>使用HOST:CONTAINER格式或者只是指定容器的端口，宿主机会随机映射端口。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ports:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;3000&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;8000:8000&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;49100:22&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:8001:8001&quot;</span></span><br></pre></td></tr></table></figure><p>注意：当使用HOST:CONTAINER格式来映射端口时，如果你使用的容器端口小于60你可能会得到错误得结果，因为YAML将会解析xx:yy这种数字格式为60进制。所以建议采用字符串格式。</p></li><li><h4 id="networks"><a href="#networks" class="headerlink" title="networks"></a>networks</h4><p>加入指定网络，同一网络可以相互通讯，格式如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">some-service:</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">some-network</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">other-network</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>autojs</title>
      <link href="/2021/04/07/program/2021-04-07-autojs/"/>
      <url>/2021/04/07/program/2021-04-07-autojs/</url>
      
        <content type="html"><![CDATA[<p>今天本来想写一个作业帮审核的脚本，本想在浏览器上用js执行，结果忘记了跨域问题，写好了发现无法进行网络请求，本已放弃，无意中看到了autojs，也是用js来写脚本，不过有专门的app，这样也不用考虑跨域问题了。以后应该还会用到，用手机来执行脚本。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;ui&quot;</span>; <span class="comment">//前面不能有任何字符</span></span><br><span class="line">ui.layout(</span><br><span class="line">    &lt;vertical&gt;</span><br><span class="line">        &lt;text textSize=<span class="string">&quot;16sp&quot;</span> textColor=<span class="string">&quot;black&quot;</span> text=<span class="string">&quot;token&quot;</span>/&gt;</span><br><span class="line">        &lt;input id=<span class="string">&quot;n&quot;</span> text=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">        &lt;text textSize=<span class="string">&quot;16sp&quot;</span> textColor=<span class="string">&quot;black&quot;</span> text=<span class="string">&quot;间隔&quot;</span>/&gt;</span><br><span class="line">        &lt;input id=<span class="string">&quot;time_min&quot;</span> text=<span class="string">&quot;1&quot;</span> /&gt;</span><br><span class="line">        &lt;input id=<span class="string">&quot;time_max&quot;</span> text=<span class="string">&quot;4&quot;</span> /&gt;</span><br><span class="line">        &lt;button id=<span class="string">&quot;start&quot;</span> text=<span class="string">&quot;启动&quot;</span>/&gt;</span><br><span class="line">        &lt;button id=<span class="string">&quot;stop&quot;</span> text=<span class="string">&quot;停止&quot;</span>/&gt;</span><br><span class="line">        <span class="comment">// list的使用</span></span><br><span class="line">        &lt;list id=<span class="string">&quot;list&quot;</span>&gt;</span><br><span class="line">            &lt;horizontal gravity=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">                &lt;text textSize=<span class="string">&quot;16sp&quot;</span> textColor=<span class="string">&quot;black&quot;</span> text=<span class="string">&quot;&#123;&#123;msg&#125;&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/horizontal&gt;</span><br><span class="line">        &lt;/list&gt;</span><br><span class="line">    &lt;/vertical&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> rizhi = [];</span><br><span class="line">ui.list.setDataSource(rizhi)</span><br><span class="line"><span class="keyword">var</span> storage = storages.create(<span class="string">&#x27;作业帮token&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> token = storage.get(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(token!=<span class="literal">null</span>)&#123;</span><br><span class="line">    ui.n.setText(storage.get(<span class="string">&#x27;token&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 要用线程</span></span><br><span class="line">ui.start.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    threads.start(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        toast(<span class="string">&quot;已开始&quot;</span>)</span><br><span class="line">        kaishi();</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ui.stop.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    threads.shutDownAll();</span><br><span class="line">    toast(<span class="string">&quot;已停止&quot;</span>)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/**************************************随机字符************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomString</span>(<span class="params">e</span>) </span>&#123;  </span><br><span class="line">    e = e || <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;ABCDEFGHJKMNPQRSTWXYZ123456780&quot;</span>,</span><br><span class="line">    a = t.length,</span><br><span class="line">    n = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; e; i++) n += t.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * a));</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**************************************随机数************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomNum</span>(<span class="params">minNum,maxNum</span>)</span>&#123; </span><br><span class="line">    <span class="keyword">switch</span>(<span class="built_in">arguments</span>.length)&#123; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*minNum+<span class="number">1</span>,<span class="number">10</span>); </span><br><span class="line">        <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*(maxNum-minNum+<span class="number">1</span>)+minNum,<span class="number">10</span>); </span><br><span class="line">        <span class="keyword">break</span>; </span><br><span class="line">            <span class="keyword">default</span>: </span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/**************************************时间格式化处理************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateFtt</span>(<span class="params">fmt,date</span>) </span></span><br><span class="line"><span class="function">    </span>&#123; <span class="comment">//author: meizz </span></span><br><span class="line">    <span class="keyword">var</span> o = &#123; </span><br><span class="line">    <span class="string">&quot;M+&quot;</span> : date.getMonth()+<span class="number">1</span>,     <span class="comment">//月份 </span></span><br><span class="line">    <span class="string">&quot;d+&quot;</span> : date.getDate(),     <span class="comment">//日 </span></span><br><span class="line">    <span class="string">&quot;h+&quot;</span> : date.getHours(),     <span class="comment">//小时 </span></span><br><span class="line">    <span class="string">&quot;m+&quot;</span> : date.getMinutes(),     <span class="comment">//分 </span></span><br><span class="line">    <span class="string">&quot;s+&quot;</span> : date.getSeconds(),     <span class="comment">//秒 </span></span><br><span class="line">    <span class="string">&quot;q+&quot;</span> : <span class="built_in">Math</span>.floor((date.getMonth()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//季度 </span></span><br><span class="line">    <span class="string">&quot;S&quot;</span> : date.getMilliseconds()    <span class="comment">//毫秒 </span></span><br><span class="line">    &#125;; </span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.test(fmt)) </span><br><span class="line">    fmt=fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (date.getFullYear()+<span class="string">&quot;&quot;</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length)); </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o) </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(&quot;</span>+ k +<span class="string">&quot;)&quot;</span>).test(fmt)) </span><br><span class="line">    fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length==<span class="number">1</span>) ? (o[k]) : ((<span class="string">&quot;00&quot;</span>+ o[k]).substr((<span class="string">&quot;&quot;</span>+ o[k]).length))); </span><br><span class="line">    <span class="keyword">return</span> fmt; </span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**************************************主函数************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">kaishi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> meiti = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> token = ui.n.text();</span><br><span class="line">    <span class="keyword">var</span> time_min = <span class="built_in">parseInt</span>(ui.time_min.text()) ;</span><br><span class="line">    <span class="keyword">var</span> time_max = <span class="built_in">parseInt</span>(ui.time_max.text()) ;</span><br><span class="line">    <span class="keyword">if</span>(token.length == <span class="number">0</span>)&#123;</span><br><span class="line">        rizhi.unshift(&#123;</span><br><span class="line">            msg:dateFtt(<span class="string">&quot;[hh:mm:ss] &quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()) + <span class="string">&#x27;token不能为空&#x27;</span></span><br><span class="line">        &#125;) </span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        storage.put(<span class="string">&#x27;token&#x27;</span>,token)</span><br><span class="line">    &#125;</span><br><span class="line">    rizhi.unshift(&#123;</span><br><span class="line">        msg:dateFtt(<span class="string">&quot;[hh:mm:ss] &quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()) + <span class="string">&#x27;token: &#x27;</span> + token</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> url1 = <span class="string">&#x27;https://wenda.zuoyebang.com/rui/ask/taskpool?taskFrom=&amp;token=&#x27;</span> + token</span><br><span class="line">    <span class="keyword">var</span> url2 = <span class="string">&#x27;https://wenda.zuoyebang.com/rui/ask/tasklist?taskType=1&amp;token=&#x27;</span> + token</span><br><span class="line">    headers1=&#123;</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;wenda.zuoyebang.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://wenda.zuoyebang.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Linux; Android 9; DUK-AL20 Build/HUAWEIDUK-AL20; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.62 XWEB/2767 MMWEBSDK/20210302 Mobile Safari/537.36 MMWEBID/9953 MicroMessenger/8.0.2.1860(0x28000237) Process/appbrand2 WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64 miniProgram&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(meiti)&#123;</span><br><span class="line">        <span class="keyword">var</span> r = http.postJson(url1,&#123;<span class="attr">headers</span>:headers1&#125;).body.json()</span><br><span class="line">        rizhi.unshift(&#123;</span><br><span class="line">            msg:dateFtt(<span class="string">&quot;[hh:mm:ss] &quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()) + <span class="string">&#x27;数量: &#x27;</span> + r.data.total.toString()</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span>(r.data.total == <span class="number">0</span>)&#123;</span><br><span class="line">            http.postJson(url2,&#123;<span class="attr">headers</span>:headers1&#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            http.postJson(url2,&#123;<span class="attr">headers</span>:headers1&#125;);</span><br><span class="line">            r = http.postJson(<span class="string">&quot;https://wenda.zuoyebang.com/commitui/firstcheck/getchecklist?businessId=&quot;</span>+randomString() +<span class="string">&quot;&amp;ts=&quot;</span>+<span class="built_in">parseInt</span>(<span class="built_in">Date</span>.now() / <span class="number">1e3</span>).toString() +<span class="string">&quot;&amp;sign=d422dbb7f0143cafb9877456b3d48617&amp;ticket=&amp;randStr=&amp;taskFrom=&amp;token=&quot;</span> + token,</span><br><span class="line">                &#123;<span class="attr">headers</span>:headers1&#125;</span><br><span class="line">                ).body.json()</span><br><span class="line">            rizhi.unshift(&#123;</span><br><span class="line">                msg:dateFtt(<span class="string">&quot;[hh:mm:ss] &quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()) + r.errStr</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span>(r.errStr == <span class="string">&quot;一审领取失败&quot;</span>)&#123;</span><br><span class="line">                meiti = <span class="literal">true</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                meiti = <span class="literal">false</span>;</span><br><span class="line">                rizhi.unshift(&#123;</span><br><span class="line">                    msg:dateFtt(<span class="string">&quot;[hh:mm:ss] &quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>()) + <span class="string">&#x27;已停止&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sleep(randomNum(time_min*<span class="number">1000</span>,time_max*<span class="number">1000</span>));</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github action自动部署</title>
      <link href="/2021/02/13/program/2021-02-13-github_action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/02/13/program/2021-02-13-github_action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>前几天看到了GitHub action可以自动运行代码，试了一下Python，感觉不错，之后想到博客之前挂掉了，可以用这个来自动部署，于是搜了一下，果然有很多教程，但我还是弄了好久，记一下采坑过程。<br>一共两个仓库，一个Hexo源文件+action，一个网站HTML等文件，用于访问。</p><h3 id="配置私钥公钥"><a href="#配置私钥公钥" class="headerlink" title="配置私钥公钥"></a>配置私钥公钥</h3><p>因为换了电脑，之前的环境什么的都没有了，得重新生成。<br>生成过程一直回车就好了。</p><ul><li><p>私钥的配置：将生成的 <code>private key</code> 作为 <code>Hexo</code> 源文件仓库 <code>Settings &gt; Secrets</code> 的 一个名叫 <code>DEPLOY_KEY</code> 的 <code>Secret</code>。注意：需要复制包括 <code>-----BEGIN OPENSSH PRIVATE KEY-----</code> 和 <code>-----END OPENSSH PRIVATE KEY-----</code> 的整个内容。<code>Secret</code> 相当于一个变量，可以使私有变量不公开。</p></li><li><p>公钥的配置：直接在这个<a href="https://github.com/settings/keys">链接</a>点击那个new SSH key就可配置</p></li></ul><h3 id="添加Github-action"><a href="#添加Github-action" class="headerlink" title="添加Github action"></a>添加Github action</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span>  <span class="comment"># default branch</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span> </span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> </span><br><span class="line">        </span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="comment"># check it to your workflow can access it</span></span><br><span class="line">    <span class="comment"># from: https://github.com/actions/checkout</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Repository</span> <span class="string">master</span> <span class="string">branch</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@master</span> </span><br><span class="line">      </span><br><span class="line">    <span class="comment"># from: https://github.com/actions/setup-node  </span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span> </span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo安装</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-deployer-git</span> <span class="string">--save</span> </span><br><span class="line">    </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Git设置</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">GH_ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="comment"># set up private key for deploy</span></span><br><span class="line">        <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;$GH_ACTION_DEPLOY_KEY&quot;</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span> </span><br><span class="line">        <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&#x27;Github用户名&#x27;</span>  </span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&#x27;Github邮箱&#x27;</span> </span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">生成文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span> </span><br><span class="line">        <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># - name: push到Github</span></span><br><span class="line">    <span class="comment">#   run: |</span></span><br><span class="line">    <span class="comment">#    cd ./public</span></span><br><span class="line">    <span class="comment">#     git config --global --list</span></span><br><span class="line">    <span class="comment">#     git init</span></span><br><span class="line">    <span class="comment">#     git add .</span></span><br><span class="line">    <span class="comment">#     git commit -m &quot;CI built at `date +&quot;%Y-%m-%d %H:%M:%S&quot;`&quot;</span></span><br><span class="line">    <span class="comment">#     git branch -M main</span></span><br><span class="line">    <span class="comment">#     git remote add origin git@github.com:dlytang/dlytang.github.io.git</span></span><br><span class="line">    <span class="comment">#     git pull origin main</span></span><br><span class="line">    <span class="comment">#     git push -u origin main</span></span><br></pre></td></tr></table></figure><p>因为之前秘钥生成错了，导致一直不能push到仓库。<br>之后每次push到这个仓库后，就会自动生成HTML，push到网站文件的仓库</p><h3 id="自定义域名-CDN"><a href="#自定义域名-CDN" class="headerlink" title="自定义域名 + CDN"></a>自定义域名 + CDN</h3><p>最近好像GitHub访问挺快的，记得之前都上不去，换成了国内的Gitee。<br>不过还是用一下又拍云的CDN吧，毕竟之前都申请好了。<br>配置的时候先不要勾选GitHub自带的https，最后配置好再弄，不然也会访问不了。</p><ul><li>此处有一点要注意，在Hexo源文件的<code>source</code>目录下新建<code>CNAME</code>文件，里面写上自定义的域名(不用带http或https)，不然每次<code>GitHub action</code> push之后就没有这个文件，自定义域名也就消失了。</li></ul><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这下应该没什么问题了，以后换电脑之类的只要把Hexo源文件的仓库拉下来就行，也不用担心服务器Nginx挂掉之后，不记得重启什么的命令格式还得百度的问题了。<br>图片什么的，就再新建一个仓库，用<code>jsdelivr</code>吧，之前的SM访问太慢了，图片还经常打不开。 </p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter搭建</title>
      <link href="/2020/09/18/program/2020-09-18-jupyter/"/>
      <url>/2020/09/18/program/2020-09-18-jupyter/</url>
      
        <content type="html"><![CDATA[<p>利用Jupyter搭建在线Python编辑器  </p><h3 id="1-创建虚拟环境"><a href="#1-创建虚拟环境" class="headerlink" title="1. 创建虚拟环境"></a>1. 创建虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ pip install virtualenv</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/python3/bin/virtualenv /usr/bin/virtualenv</span><br><span class="line"></span><br><span class="line">$ mkdir jupyter                     <span class="comment">#创建jupyter文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> jupyter</span><br><span class="line">$ virtualenv venv                       <span class="comment">#创建venv文件夹</span></span><br><span class="line">New python executable <span class="keyword">in</span> venv/bin/python</span><br><span class="line">Installing distribute............done.</span><br><span class="line">$ <span class="built_in">source</span> venv/bin/activate            <span class="comment">#激活虚拟环境</span></span><br></pre></td></tr></table></figure><h3 id="2-安装Jupyter"><a href="#2-安装Jupyter" class="headerlink" title="2.安装Jupyter"></a>2.安装Jupyter</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install jupyter </span><br></pre></td></tr></table></figure><h3 id="3-配置-Jupyter-Notebook"><a href="#3-配置-Jupyter-Notebook" class="headerlink" title="3.配置 Jupyter Notebook"></a>3.配置 Jupyter Notebook</h3><p>生成配置文件,文件在 <code>/root/.jupyter/jupyter_notebook_config.py</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter notebook --generate-config</span><br></pre></td></tr></table></figure><p>设置密码  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [1]: from IPython.lib import passwd</span><br><span class="line">In [2]: passwd()</span><br><span class="line">Enter password: </span><br><span class="line">Verify password: </span><br><span class="line">Out[2]: <span class="string">&#x27;这里是密码&#x27;</span></span><br></pre></td></tr></table></figure><p>修改配置,在生成的config.py文件最后加入  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.ip = <span class="string">&#x27;*&#x27;</span> <span class="comment">#所有绑定服务器的IP都能访问，若想只在特定ip访问，输入ip地址即可</span></span><br><span class="line">c.NotebookApp.port = <span class="number">9000</span> <span class="comment">#将端口设置为自己喜欢的吧，默认是9000</span></span><br><span class="line">c.NotebookApp.open_browser = <span class="literal">False</span> <span class="comment">#我们并不想在服务器上直接打开Jupyter Notebook，所以设置成False</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">&#x27;/root/jupyter_projects&#x27;</span> <span class="comment">#jupyter文件保存目录 </span></span><br><span class="line">c.NotebookApp.allow_root = <span class="literal">True</span> <span class="comment"># 为了安全，Jupyter默认不允许以root权限启动jupyter</span></span><br><span class="line">c.NotebookApp.password = <span class="string">u&#x27;上面生成的密码：sha1:***&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4.启动服务"></a>4.启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter notebook</span><br></pre></td></tr></table></figure><p>在自己windows下用<code>pip</code>安装了，但在cmd里面一直提示<code>jupyter</code>不是命令，只能用<code>python -m jupyter notebook</code>来运行了或者用<code>jupyter-notebook</code>也可以。</p><h3 id="5-设置主题"><a href="#5-设置主题" class="headerlink" title="5.设置主题"></a>5.设置主题</h3><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyterthemes</span><br></pre></td></tr></table></figure><p>一种比较好看的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jt -t onedork -f fira -fs 10 -cellw 90% -ofs 8 -dfs 8 -T -T -N</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署</title>
      <link href="/2020/08/24/program/2020-08-24-%E9%83%A8%E7%BD%B2/"/>
      <url>/2020/08/24/program/2020-08-24-%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="gunicron"><a href="#gunicron" class="headerlink" title="gunicron"></a>gunicron</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gunicron </span><br></pre></td></tr></table></figure><p>使用的目录在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;gunicorn</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><blockquote><p>-w: 代表启动4个进程，可以通过ps -ef | grep 9001可以看到四个PID；<br>-b: 打标绑定的IP和端口号,0.0.0.1表示不仅仅能在本台机器上访问，外网也可以访问，绑定的为9001端口<br>wsgi:app, wsgi代表文件名，app为对应到该文件中创建的Flask对象<br>此外还有其他参数:<br>–log-level LEVEL:表示日志级别，测试可以用DEBUG<br>–timeout: 超时时间，单位是秒</p></blockquote><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#直接执行</span><br><span class="line">gunicorn -w 4 -b 127.0.0.1:5000 app:app </span><br><span class="line">#通过配置文件执行</span><br><span class="line">gunicorn -c config.py app:app</span><br></pre></td></tr></table></figure><p>假如gunicorn命令不存在 可以用虚拟环境</p><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#查看进程树</span><br><span class="line">pstree -ap|grep gunicorn</span><br><span class="line">kill 进程即可退出 进程在&#x2F;log&#x2F;pid文件中</span><br></pre></td></tr></table></figure><h1 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;virtualenv &#x2F;usr&#x2F;bin&#x2F;virtualenv</span><br><span class="line"></span><br><span class="line">mkdir myproject                       #创建某项目文件夹</span><br><span class="line">cd myproject</span><br><span class="line">virtualenv venv                       #创建venv文件夹</span><br><span class="line">New python executable in venv&#x2F;bin&#x2F;python</span><br><span class="line">Installing distribute............done.</span><br><span class="line">$ source venv&#x2F;bin&#x2F;activate            #激活虚拟环境</span><br><span class="line">(venv) $ pip install Flask            #在激活的虚拟环境中安装Flask</span><br></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#创建虚拟环境</span><br><span class="line">virtualenv 名字</span><br><span class="line"></span><br><span class="line">#退出虚拟环境</span><br><span class="line">deactivate</span><br><span class="line"></span><br><span class="line">#删除虚拟环境</span><br><span class="line">rmvirtualenv 虚拟环境名称</span><br><span class="line">例：</span><br><span class="line">先退出：deactivate</span><br><span class="line">再删除：rmvirtualenv py_django</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 编程 </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发测试</title>
      <link href="/2020/08/24/program/2020-08-24-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/08/24/program/2020-08-24-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="并发测试-ab"><a href="#并发测试-ab" class="headerlink" title="并发测试 ab"></a>并发测试 ab</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd-tools</span><br></pre></td></tr></table></figure><p>测试安装是否成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@vic html]# ab -V</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;$Revision: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http:&#x2F;&#x2F;www.zeustech.net&#x2F;</span><br><span class="line">Licensed to The Apache Software Foundation, http:&#x2F;&#x2F;www.apache.org&#x2F;</span><br></pre></td></tr></table></figure><h2 id="2-参数说明"><a href="#2-参数说明" class="headerlink" title="2. 参数说明"></a>2. 参数说明</h2><ul><li><p>-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。请求的总数量</p></li><li><p>-c一次产生的请求个数。默认是一次一个。请求的用户量</p></li><li><p>-t测试所进行的最大秒数。其内部隐含值是-n 50000，它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。</p></li><li><p>-V显示版本号并退出。</p></li></ul><h2 id="3-性能指标"><a href="#3-性能指标" class="headerlink" title="3. 性能指标"></a>3. 性能指标</h2><ul><li>吞吐量（Requests per second）</li></ul><blockquote><p>服务器并发处理能力的量化描述，单位是reqs/s，指的是在某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。<br>记住：吞吐率是基于并发用户数的。这句话代表了两个含义：<br>a、吞吐率和并发用户数相关<br>b、不同的并发用户数下，吞吐率一般是不同的<br>计算公式：总请求数/处理完成这些请求数所花费的时间，即<br>Request per second=Complete requests/Time taken for tests<br>必须要说明的是，这个数值表示当前机器的整体性能，值越大越好。</p></blockquote><ul><li>并发连接数（The number of concurrent connections）</li></ul><blockquote><p>并发连接数指的是某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。</p></blockquote><ul><li>并发用户数（Concurrency Level）</li></ul><blockquote><p>要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。在HTTP/1.1下，IE7支持两个并发连接，IE8支持6个并发连接，FireFox3支持4个并发连接，所以相应的，我们的并发用户数就得除以这个基数。</p></blockquote><ul><li>用户平均请求等待时间（Time per request）</li></ul><blockquote><p>计算公式：处理完成所有请求数所花费的时间/（总请求数/并发用户数），即：<br>Time per request=Time taken for tests/（Complete requests/Concurrency Level）</p></blockquote><ul><li>服务器平均请求等待时间（Time per request:across all concurrent requests）<blockquote><p>计算公式：处理完成所有请求数所花费的时间/总请求数，即：<br>Time taken for/testsComplete requests<br>可以看到，它是吞吐率的倒数。<br>同时，它也等于用户平均请求等待时间/并发用户数，即<br>Time per request/Concurrency Level</p></blockquote></li></ul><h2 id="4-ab的应用"><a href="#4-ab的应用" class="headerlink" title="4. ab的应用"></a>4. ab的应用</h2><ul><li>命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab -c 10 -n 100 https:&#x2F;&#x2F;cwxhmk.top</span><br></pre></td></tr></table></figure></li><li>c10表示并发用户数为10  </li><li>n100表示请求总数为100<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">This is ApacheBench, Version 2.3 &lt;$Revision: 1430300 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http:&#x2F;&#x2F;www.zeustech.net&#x2F;</span><br><span class="line">Licensed to The Apache Software Foundation, http:&#x2F;&#x2F;www.apache.org&#x2F;</span><br><span class="line"></span><br><span class="line">Benchmarking cwxhmk.top (be patient)</span><br><span class="line">Completed 100 requests</span><br><span class="line">Completed 200 requests</span><br><span class="line">Completed 300 requests</span><br><span class="line">Completed 400 requests</span><br><span class="line">Completed 500 requests</span><br><span class="line">Finished 500 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        Tengine    #测试服务器的名字</span><br><span class="line">Server Hostname:        cwxhmk.top #请求的URL主机名</span><br><span class="line">Server Port:            443        #web服务器监听的端口</span><br><span class="line">SSL&#x2F;TLS Protocol:       TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128</span><br><span class="line"></span><br><span class="line">Document Path:          &#x2F;</span><br><span class="line">Document Length:        60 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      50            #并发用户数，这是我们设置的参数之一</span><br><span class="line">Time taken for tests:   3.371 seconds #所有这些请求被处理完成所花费的总时间 单位秒</span><br><span class="line">Complete requests:      500           #总请求数量，这是我们设置的参数之一</span><br><span class="line">Failed requests:        0             #表示失败的请求数量</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      259033 bytes  #所有请求的响应数据长度总和。包括每个HTTP响应数据的头信息和正文数据的长度</span><br><span class="line">HTML transferred:       30000 bytes   # 所有请求的响应数据中正文数据的总和，也就是减去了Total transferred中HTTP响应数据中的头信息的长度</span><br><span class="line">Requests per second:    148.31 [#&#x2F;sec] (mean) #吞吐率，总请求数&#x2F;处理完成这些请求数所花费的时间</span><br><span class="line">Time per request:       337.127 [ms] (mean) # 用户平均请求等待时间 处理完成所有请求数所花费的时间&#x2F;（总请求数&#x2F;并发用户数）</span><br><span class="line">Time per request:       6.743 [ms] (mean, across all concurrent requests) #服务器平均请求等待时间，计算公式：Time taken for tests&#x2F;Complete requests，正好是吞吐率的倒数。也可以这么统计：Time per request&#x2F;Concurrency Level</span><br><span class="line">Transfer rate:          75.03 [Kbytes&#x2F;sec] received #表示这些请求在单位时间内从服务器获取的数据长度，计算公式：Total trnasferred&#x2F; Time taken for tests，这个统计很好的说明服务器的处理能力达到极限时，其出口宽带的需求量。</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+&#x2F;-sd] median   max</span><br><span class="line">Connect:       52   88  45.2     86     870</span><br><span class="line">Processing:    73  179 101.9    158     844</span><br><span class="line">Waiting:       73  179 101.8    157     844</span><br><span class="line">Total:        134  267 111.3    245    1012</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line">  50%    245</span><br><span class="line">  66%    262</span><br><span class="line">  75%    272</span><br><span class="line">  80%    282</span><br><span class="line">  90%    357</span><br><span class="line">  95%    502</span><br><span class="line">  98%    533</span><br><span class="line">  99%    853</span><br><span class="line"> 100%   1012 (longest request)  # 这部分数据用于描述每个请求处理时间的分布情况，比如以上测试，80%的请求处理时间都不超过282ms，这个处理时间是指前面的Time per request，即对于单个用户而言，平均每个请求的处理时间</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p>来源: <a href="https://www.cnblogs.com/myvic/p/7703973.html">https://www.cnblogs.com/myvic/p/7703973.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 编程 </tag>
            
            <tag> 并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装</title>
      <link href="/2020/08/24/program/2020-08-24-Python-Install/"/>
      <url>/2020/08/24/program/2020-08-24-Python-Install/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p> 1</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/local/python3</span><br><span class="line">wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tgz</span><br><span class="line">tar -xzvf Python-3.7.6.tgz</span><br><span class="line">cd Python-3.7.6</span><br></pre></td></tr></table></figure><p>后面会缺少_ssl 在这里先安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel gcc gcc-c++ openssl-devel</span><br></pre></td></tr></table></figure><p>之后进去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /root/Python-3.7.6/Modules/Setup.dist</span><br></pre></td></tr></table></figure><p>修改结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Socket module helper <span class="keyword">for</span> socket(2)</span></span><br><span class="line">_socket socketmodule.c timemodule.c</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> Socket module helper <span class="keyword">for</span> SSL support; you must comment out the other</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> socket line above, and possibly edit the SSL variable:</span></span><br><span class="line">SSL=/usr/local/ssl</span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line"><span class="meta">-L$</span><span class="bash">(SSL)/lib -lssl -lcrypto</span></span><br><span class="line">```   </span><br><span class="line">``` shell</span><br><span class="line">yum -y install zlib*</span><br><span class="line">sudo ./configure --prefix=/usr/local/python3</span><br><span class="line"></span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="配置2个版本共存"><a href="#配置2个版本共存" class="headerlink" title="配置2个版本共存"></a>配置2个版本共存</h2><p>创建 python3 的软链接，这样就可以通过 python 命令使用 Python 2，python3 来使用 Python 3。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br></pre></td></tr></table></figure><ol><li>修改yum配置文件，将python版本指向以前的旧版本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/bin/yum</span><br></pre></td></tr></table></figure><p>把第一行改成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/python2.7 </span></span><br></pre></td></tr></table></figure><p>附：vi模式的编辑与退出编辑模式的方法。<br>进入编辑（insert）模式：按i键<br>保存并退出编辑模式：先按Esc键，再按Shift+zz（就是按着Shift键，按两下z键，就可以了）</p><ol start="2"><li>修改urlgrabber-ext-down文件，更改python版本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/libexec/urlgrabber-ext-down</span><br></pre></td></tr></table></figure><p>把第一行改成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/python2.7</span></span><br></pre></td></tr></table></figure><h2 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://files.pythonhosted.org/packages/a6/5b/f399fcffb9128d642387133dc3aa9bb81f127b949cd4d9f63e5602ad1d71/setuptools-39.1.0.zip</span><br><span class="line">unzip setuptools-39.1.0.zip</span><br><span class="line">cd setuptools-39.1.0</span><br><span class="line">python setup.py install</span><br><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python get-pip.py</span><br><span class="line">sudo ln -s /usr/local/python3/bin/pip3 /usr/bin/pip</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="Could-not-find-an-available-JavaScript-runtime"><a href="#Could-not-find-an-available-JavaScript-runtime" class="headerlink" title="Could not find an available JavaScript runtime"></a>Could not find an available JavaScript runtime</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nodejs</span><br></pre></td></tr></table></figure><h3 id="包的导入"><a href="#包的导入" class="headerlink" title="包的导入"></a>包的导入</h3><h5 id="在python导包的时候有三条铁规："><a href="#在python导包的时候有三条铁规：" class="headerlink" title="在python导包的时候有三条铁规："></a>在python导包的时候有三条铁规：</h5><ol><li>严格区分包和文件夹。包的定义就是包含<strong>init</strong>.py的文件夹。如果没有<strong>init</strong>.py,那么就是普通的文件夹。</li></ol><p> </p><ol start="2"><li><p>导入package。  在python 安装目录的site-package文件夹中新建xxx.pth，内容是需要导入的package所在的文件夹路径。</p></li><li><p>导入模块。就是一般的模块导入写法，注意只要包路径，不要文件夹路径。</p></li></ol><p> </p><h5 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h5><ol><li><p>找到你的python安装路径，我的是在 /home/jianping/env/lib/python2.7</p></li><li><p>进入python安装路径的site-packages下。即： /home/jianping/env/lib/python2.7/site-packages</p></li><li><p>创建一个后缀为.pth的文件：touch xxx.pth</p></li><li><p>编辑该pth文件：vi xxx.pth</p></li><li><p>将你要导入的包的绝对路径写入到xxx.pth文件中。（注意：一定要是绝对路径，并且要导入的包需要有<strong>init</strong>.py文件）<br> 例如:<br> /home/jianping/work/package(package是要导入的包)</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 编程 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx安装与配置</title>
      <link href="/2020/08/24/program/2020-08-24-Nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/08/24/program/2020-08-24-Nginx%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.20.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.20.0.tar.gz</span><br><span class="line">cd nginx-1.20.0</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx --with-http_ssl_module</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  47.93.225.255;</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">           proxy_pass   http:&#x2F;&#x2F;127.0.0.1:5000;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        listen       81;</span><br><span class="line">        server_name  47.93.225.255;</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">           proxy_pass   http:&#x2F;&#x2F;127.0.0.1:5001;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -c &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br><span class="line"># 重启</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload </span><br><span class="line"># 停止</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s stop</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 编程 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongo</title>
      <link href="/2020/08/24/program/2020-08-24-mongo/"/>
      <url>/2020/08/24/program/2020-08-24-mongo/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="1-方法一-不推荐"><a href="#1-方法一-不推荐" class="headerlink" title="1. 方法一(不推荐)"></a>1. 方法一(不推荐)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;yum.repos.d&#x2F;mongodb.repo</span><br></pre></td></tr></table></figure><p>写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mongodb-org]</span><br><span class="line">name&#x3D;MongoDB Repository</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;mongodb&#x2F;yum&#x2F;el$releasever&#x2F;</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br></pre></td></tr></table></figure><p>保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache</span><br><span class="line">sudo yum install mongodb-org</span><br></pre></td></tr></table></figure><p>将mongoDB添加到systemd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mongod.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;mongodb database</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;mongod</span><br><span class="line">Group&#x3D;mongod</span><br><span class="line">Environment&#x3D;&quot;OPTIONS&#x3D;--quiet -f &#x2F;etc&#x2F;mongod.conf&quot;</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;mongod $OPTIONS run</span><br><span class="line">PIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;mongodb&#x2F;mongod.pid</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p>建立链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mongod.service &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;</span><br></pre></td></tr></table></figure><p>重新加载systemctl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="2-方法二-推荐"><a href="#2-方法二-推荐" class="headerlink" title="2. 方法二(推荐)"></a>2. 方法二(推荐)</h2><p>###1. 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 下载</span><br><span class="line">curl -O https:&#x2F;&#x2F;fastdl.mongodb.org&#x2F;linux&#x2F;mongodb-linux-x86_64-3.0.6.tgz    </span><br><span class="line"># 解压</span><br><span class="line">tar -zxvf mongodb-linux-x86_64-3.0.6.tgz                                   </span><br><span class="line"># 将解压包拷贝到指定目录</span><br><span class="line">mv  mongodb-linux-x86_64-3.0.6&#x2F; &#x2F;usr&#x2F;local&#x2F;mongodb                         </span><br></pre></td></tr></table></figure><p>MongoDB 的可执行文件位于 bin 目录下，所以可以将其添加到 PATH 路径中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;mongodb&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>直接执行此命令，只会创建出临时的环境变量，即重新断开连接服务器后会失效;</p><p>环境变量持久化配置：需要将mongod路径添加到系统路径中，<br>在 <code>/etc/profile</code> 文件中，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;mongodb&#x2F;bin:$PATH;</span><br></pre></td></tr></table></figure><p>执行 <code>source /etc/profile</code>使系统环境变量立即生效</p><h3 id="2-启动配置"><a href="#2-启动配置" class="headerlink" title="2.启动配置"></a>2.启动配置</h3><ol><li>创建数据库存放和日志目录<br> <code>/usr/local/mongodb/data/db</code><br> <code>/usr/local/mongodb/log</code></li><li>配置mongod启动文件<br><code>/usr/local/mongodb/etc</code>下创建配置文件mongod.conf:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dbpath&#x3D;&#x2F;usr&#x2F;local&#x2F;mongodb&#x2F;data   # 数据库存放位置（之前创建的）</span><br><span class="line">logpath&#x3D;&#x2F;usr&#x2F;local&#x2F;mongodb&#x2F;log&#x2F;mongo.log   # 数据库日志存放位置（之前创建的）</span><br><span class="line">port&#x3D;27017</span><br><span class="line">fork&#x3D;true   #后台运行</span><br><span class="line">auth&#x3D;false  # 初次配置先关了权限验证登陆模式</span><br><span class="line">journal&#x3D;false</span><br></pre></td></tr></table></figure><h3 id="3-启动"><a href="#3-启动" class="headerlink" title="3.启动"></a>3.启动</h3></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mongodb/bin</span><br><span class="line">mongod -f /usr/<span class="built_in">local</span>/mongodb/etc/mongo.conf</span><br><span class="line"><span class="comment">#关闭</span></span><br><span class="line">mongod -f /usr/<span class="built_in">local</span>/mongodb/etc/mongo.conf -shutdown</span><br></pre></td></tr></table></figure><p>宝塔的话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/www/server/mongodb/bin/mongod -f /www/server/mongodb/config.conf </span><br><span class="line"><span class="comment">#关闭</span></span><br><span class="line">/www/server/mongodb/bin/mongod -f /www/server/mongodb/config.conf  -shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修复（无法启动等问题）</span></span><br><span class="line">mongod -f /www/server/mongodb/config.conf --dbpath /www/server/mongodb/data --repair</span><br><span class="line"></span><br><span class="line">mongod -f /www/server/mongodb/config.conf --dbpath /www/server/mongodb/data</span><br><span class="line"></span><br><span class="line">ps -ef | grep mongo</span><br></pre></td></tr></table></figure><h3 id="4-设置用户"><a href="#4-设置用户" class="headerlink" title="4.设置用户"></a>4.设置用户</h3><p>进入数据库管理命令界面:<code>mongo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">db.createUser(&#123;user:&#39;admin&#39;,pwd:&#39;password&#39;,roles:[&#123;role:&#39;root&#39;,&#39;db&#39;:&#39;admin&#39;&#125;]&#125;)</span><br><span class="line">use dbname</span><br><span class="line">db.createUser(&#123;user:&#39;dbname&#39;,pwd:&#39;password&#39;,roles:[&#123;role:&#39;readWrite&#39;,db:&#39;dbname&#39;&#125;]&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>常用的role值记录: </li></ul><ol><li>数据库用户角色：read、readWrite; </li><li>数据库管理角色：dbAdmin、dbOwner、userAdmin； </li><li>集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager； </li><li>备份恢复角色：backup、restore； </li><li>所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase </li><li>超级用户角色：root </li><li>内部角色：__system </li></ol><ul><li>相应的功能 </li><li>Read：允许用户读取指定数据库 </li><li>readWrite：允许用户读写指定数据库 </li><li>dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile </li><li>userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户 </li><li>clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。 </li><li>readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限 </li><li>readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限 </li><li>userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限 </li><li>dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。 </li><li>root：只在admin数据库中可用。超级账号，超级权限</li></ul><p>还把配置文件<code>auth</code>改为true</p><h3 id="6-远程连接"><a href="#6-远程连接" class="headerlink" title="6.远程连接"></a>6.远程连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongo IP:27017&#x2F;admin -u useradmin -p password</span><br><span class="line">或</span><br><span class="line">mongo IP:27017</span><br><span class="line">use dbname</span><br><span class="line">db.auth(&#39;username&#39;,&#39;password&#39;)即可</span><br></pre></td></tr></table></figure><h3 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a>备份与恢复</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">* 备份</span><br><span class="line">    mongodump -h dbhost -d dbname -o dbdirectory</span><br><span class="line">    mongodump -h ip:27017 -u admin -p password -d database -o path</span><br><span class="line">    -h：</span><br><span class="line">MongDB所在服务器地址，例如：127.0.0.1，当然也可以指定端口号：127.0.0.1:27017</span><br><span class="line"></span><br><span class="line">    -d：</span><br><span class="line">需要备份的数据库实例，例如：test</span><br><span class="line"></span><br><span class="line">    -o：</span><br><span class="line">备份的数据存放位置，例如：c:\data\dump，当然该目录需要提前建立，在备份完成后，系统自动在dump目录下建立一个test目录，这个目录里面存放该数据库实例的备份数据。</span><br><span class="line">* 恢复</span><br><span class="line"></span><br><span class="line">    mongorestore -h ip:port -d dbname 路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    mongorestore -h &lt;hostname&gt;&lt;:port&gt; -d dbname &lt;path&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    --host &lt;:port&gt;, -h &lt;:port&gt;：</span><br><span class="line">    MongoDB所在服务器地址，默认为： localhost:27017</span><br><span class="line"></span><br><span class="line">    --db , -d ：</span><br><span class="line">    需要恢复的数据库实例，例如：test，当然这个名称也可以和备份时候的不一样，比如test2</span><br><span class="line"></span><br><span class="line">    --drop：</span><br><span class="line">    恢复的时候，先删除当前数据，然后恢复备份的数据。就是说，恢复后，备份后添加修改的数据都会被删除，慎用哦！</span><br><span class="line"></span><br><span class="line">    &lt;path&gt;：</span><br><span class="line">    mongorestore 最后的一个参数，设置备份数据所在位置，例如：c:\data\dump\test。</span><br><span class="line"></span><br><span class="line">    你不能同时指定 &lt;path&gt; 和 --dir 选项，--dir也可以设置备份目录。</span><br><span class="line"></span><br><span class="line">    --dir：</span><br><span class="line">    指定备份的目录</span><br><span class="line"></span><br><span class="line">    你不能同时指定 &lt;path&gt; 和 --dir 选项。</span><br></pre></td></tr></table></figure><h3 id="5-卸载"><a href="#5-卸载" class="headerlink" title="5. 卸载"></a>5. 卸载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum erase $(rpm -qa | grep mongodb-org)   # 卸载</span><br><span class="line"></span><br><span class="line">sudo rm -r &#x2F;var&#x2F;log&#x2F;mongodb  # 删除日志文件</span><br><span class="line"></span><br><span class="line">sudo rm -r &#x2F;var&#x2F;lib&#x2F;mongo    # 删除数据</span><br></pre></td></tr></table></figure><h3 id="6-操作"><a href="#6-操作" class="headerlink" title="6.操作"></a>6.操作</h3><p>查重</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.getCollection(&#39;表&#39;).aggregate([</span><br><span class="line">    &#123;</span><br><span class="line">        $group:&#123;_id:&#123;&#39;字段&#39;:&#39;$字段&#39;&#125;, count:&#123;$sum:1&#125;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        $match:&#123;count:&#123;$gt:1&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>按netid进行查重<br>去处</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">db.getCollection(&#39;表&#39;).aggregate([</span><br><span class="line">    &#123;</span><br><span class="line">        $group: &#123; _id: &#123;字段: &#39;$字段&#39;&#125;,count: &#123;$sum: 1&#125;,dups: &#123;$addToSet: &#39;$_id&#39;&#125;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        $match: &#123;count: &#123;$gt: 1&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]).forEach(function(doc)&#123;</span><br><span class="line">    doc.dups.shift();</span><br><span class="line">    db.表.remove(&#123;_id: &#123;$in: doc.dups&#125;&#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">去处指定字段</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 编程 </tag>
            
            <tag> mongo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常见命令</title>
      <link href="/2020/08/24/program/2020-08-24-Linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/08/24/program/2020-08-24-Linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="1-编辑"><a href="#1-编辑" class="headerlink" title="1. 编辑"></a>1. 编辑</h3><p>vi 文件<br>进入编辑（insert）模式：按i键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Esc:wq  保存</span><br><span class="line">Esc:q  不保存</span><br></pre></td></tr></table></figure><h3 id="2-后台"><a href="#2-后台" class="headerlink" title="2. 后台"></a>2. 后台</h3><p>Ctrl+Z    变为后台暂停<br>jobs      查看后台程序<br>jobs -l   查看后台程序PID<br>kill %1   杀死序号为1的进程<br>kill 4664 杀死PID为4664的进程</p><p>fg  将后台中的命令调至前台继续运行<br>fg %n 让后台运行的进程n到前台来<br>bg %n 将任务放到后台中去处理</p><p>ps -ef 查看后台任务</p><p>后台执行(关掉终端继续运行)  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nohup python3 -u &#x2F;root&#x2F;hmk&#x2F;nonebot&#x2F;bot.py &gt;&#x2F;root&#x2F;hmk&#x2F;nonebot&#x2F;nonebot.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup python3 &#x2F;root&#x2F;hmk&#x2F;flask&#x2F;app.py &gt;flask.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup python3 &#x2F;root&#x2F;hmk&#x2F;flask_api&#x2F;app.py &gt;flask_api.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup python3 -u &#x2F;root&#x2F;hmk&#x2F;coolq_htx&#x2F;nonebot&#x2F;bot.py &gt;&#x2F;root&#x2F;hmk&#x2F;coolq_htx&#x2F;nonebot&#x2F;nonebot.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="3-定时"><a href="#3-定时" class="headerlink" title="3. 定时"></a>3. 定时</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -e 定时执行 </span><br><span class="line">crontab -l 查看所有定时</span><br><span class="line">crontab -r 删除所有定时</span><br></pre></td></tr></table></figure><h3 id="4-酷Q-已死-Docker"><a href="#4-酷Q-已死-Docker" class="headerlink" title="4. 酷Q (已死) + Docker"></a>4. 酷Q (已死) + Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=coolq_hmk -d -p 9001:9000 -v /root/hmk/coolq_hmk:/home/user/coolq -e VNC_PASSWD=19990613 -e COOLQ_ACCOUNT=123456 coolq/wine-coolq</span><br><span class="line">                  容器名称        端口          地址                                               密码                      账号</span><br><span class="line">查看运行容器  </span><br><span class="line">docker ps</span><br><span class="line">查看所有容器</span><br><span class="line">docker ps -a</span><br><span class="line">重启容器</span><br><span class="line">docker restart ID前四位</span><br><span class="line">docker run --name=coolq_yyt -d -p 9002:9000 -v /root/hmk/coolq_yyt:/home/user/coolq -e VNC_PASSWD=88888888 coolq/wine-coolq</span><br><span class="line">docker run --name=coolq_htx -d -p 9002:9000 -v /root/hmk/coolq_htx:/home/user/coolq -e VNC_PASSWD=88888888 coolq/wine-coolq</span><br><span class="line">docker run --name=coolq_yang -d -p 9001:9000 -v /root/hmk/coolq_yang:/home/user/coolq -e VNC_PASSWD=19990613 coolq/wine-coolq</span><br><span class="line">docker run --name=coolq_hmk -d -p 9000:9000 -v /usr/<span class="built_in">local</span>/coolq:/home/user/coolq -e VNC_PASSWD=19990613 coolq/wine-coolq</span><br></pre></td></tr></table></figure><h3 id="5-Mirai-QQ机器人"><a href="#5-Mirai-QQ机器人" class="headerlink" title="5. Mirai (QQ机器人)"></a>5. Mirai (QQ机器人)</h3><p>码云地址：<a href="https://gitee.com/dlytang/mirai'">Mirai</a></p><ul><li><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4></li></ul><ol><li>新建文件夹 <code>mirai</code>，新建screen</li><li>在 <a href="https://gitee.com/dlytang/MiraiOK">MiraiOK</a> 中下载Linux-amd64,重命名为<code>miraiok</code></li><li>执行 <code>chmod +x miraiok* &amp;&amp; ./miraiok*</code> 初始化和运行</li><li>修改 <code>config.txt</code> 可设置自动登录账号<h5 id="以下为-cqhttp-mirai-的配置，类似cqhttp-就是配置地址信息"><a href="#以下为-cqhttp-mirai-的配置，类似cqhttp-就是配置地址信息" class="headerlink" title="以下为 cqhttp-mirai 的配置，类似cqhttp,就是配置地址信息"></a>以下为 <code>cqhttp-mirai</code> 的配置，类似cqhttp,就是配置地址信息</h5></li><li>将 <code>cqhttp-mirai</code> 生成的jar包文件放入 <code>plugins</code> 文件夹中</li><li>编辑 <code>plugins/CQHTTPMirai/setting.yml</code> 配置文件, 将以下给出配置复制并修改<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"># Debug日志输出选项</span><br><span class="line">debug: false</span><br><span class="line"># 要进行配置的QQ号 (Mirai支持多帐号登录, 故需要对每个帐号进行单独设置)</span><br><span class="line">&#x27;205206605&#x27;:</span><br><span class="line">  # 是否缓存所有收到的图片, 默认为否 (仅包含图片信息, 不包含图片本身,  &lt; 0.5KB)</span><br><span class="line">  cacheImage: false</span><br><span class="line">  # HTTP 相关配置</span><br><span class="line">  http:</span><br><span class="line">    # 可选，是否启用HTTP API服务器, 默认为不启用, 此项开始与否跟postUrl无关</span><br><span class="line">    enable: true</span><br><span class="line">    # 可选，HTTP API服务器监听地址, 默认为0.0.0.0</span><br><span class="line">    host: 0.0.0.0</span><br><span class="line">    # 可选，HTTP API服务器监听端口, 5700</span><br><span class="line">    port: 5700</span><br><span class="line">    # 可选，访问口令, 默认为空, 即不设置Token</span><br><span class="line">    accessToken: &quot;&quot;</span><br><span class="line">    # 可选，事件及数据上报URL, 默认为空, 即不上报</span><br><span class="line">    postUrl: &quot;&quot;</span><br><span class="line">    # 可选，上报消息格式，string 为字符串格式，array 为数组格式, 默认为string</span><br><span class="line">    postMessageFormat: string</span><br><span class="line">    # 可选，上报数据签名密钥, 默认为空</span><br><span class="line">    secret: &quot;&quot;</span><br><span class="line">  # 可选，反向客户端服务</span><br><span class="line">  ws_reverse:</span><br><span class="line">    # 可选，是否启用反向客户端，默认不启用</span><br><span class="line">    - enable: true</span><br><span class="line">      # 上报消息格式，string 为字符串格式，array 为数组格式</span><br><span class="line">      postMessageFormat: string</span><br><span class="line">      # 反向Websocket主机</span><br><span class="line">      reverseHost: 127.0.0.1</span><br><span class="line">      # 反向Websocket端口</span><br><span class="line">      reversePort: 8080</span><br><span class="line">      # 访问口令, 默认为空, 即不设置Token</span><br><span class="line">      accessToken: &quot;&quot;</span><br><span class="line">      # 反向Websocket路径</span><br><span class="line">      reversePath: /ws</span><br><span class="line">      # 可选, 反向Websocket Api路径, 默认为reversePath</span><br><span class="line">      reverseApiPath: /api</span><br><span class="line">      # 可选, 反向Websocket Event路径, 默认为reversePath</span><br><span class="line">      reverseEventPath: /event</span><br><span class="line">      # 是否使用Universal客户端 默认为true</span><br><span class="line">      useUniversal: true</span><br><span class="line">      # 反向 WebSocket 客户端断线重连间隔，单位毫秒</span><br><span class="line">      reconnectInterval: 3000</span><br><span class="line">    - enable: true # 这里是第二个连接, 相当于CQHTTP分身版</span><br><span class="line">      postMessageFormat: string</span><br><span class="line">      reverseHost: 127.0.0.1</span><br><span class="line">      reversePort: 8080</span><br><span class="line">      reversePath: /ws</span><br><span class="line">      useUniversal: false</span><br><span class="line">      reconnectInterval: 3000</span><br><span class="line">&#x27;1400633422&#x27;:</span><br><span class="line">  # 是否缓存所有收到的图片, 默认为否 (仅包含图片信息, 不包含图片本身,  &lt; 0.5KB)</span><br><span class="line">  cacheImage: false</span><br><span class="line">  # HTTP 相关配置</span><br><span class="line">  http:</span><br><span class="line">    # 可选，是否启用HTTP API服务器, 默认为不启用, 此项开始与否跟postUrl无关</span><br><span class="line">    enable: true</span><br><span class="line">    # 可选，HTTP API服务器监听地址, 默认为0.0.0.0</span><br><span class="line">    host: 0.0.0.0</span><br><span class="line">    # 可选，HTTP API服务器监听端口, 5700</span><br><span class="line">    port: 5701</span><br><span class="line">    # 可选，访问口令, 默认为空, 即不设置Token</span><br><span class="line">    accessToken: &quot;&quot;</span><br><span class="line">    # 可选，事件及数据上报URL, 默认为空, 即不上报</span><br><span class="line">    postUrl: &quot;&quot;</span><br><span class="line">    # 可选，上报消息格式，string 为字符串格式，array 为数组格式, 默认为string</span><br><span class="line">    postMessageFormat: string</span><br><span class="line">    # 可选，上报数据签名密钥, 默认为空</span><br><span class="line">    secret: &quot;&quot;</span><br><span class="line">  # 可选，反向客户端服务</span><br><span class="line">  ws_reverse:</span><br><span class="line">    # 可选，是否启用反向客户端，默认不启用</span><br><span class="line">    - enable: true</span><br><span class="line">      # 上报消息格式，string 为字符串格式，array 为数组格式</span><br><span class="line">      postMessageFormat: string</span><br><span class="line">      # 反向Websocket主机</span><br><span class="line">      reverseHost: 127.0.0.1</span><br><span class="line">      # 反向Websocket端口</span><br><span class="line">      reversePort: 8081</span><br><span class="line">      # 访问口令, 默认为空, 即不设置Token</span><br><span class="line">      accessToken: &quot;&quot;</span><br><span class="line">      # 反向Websocket路径</span><br><span class="line">      reversePath: /ws</span><br><span class="line">      # 可选, 反向Websocket Api路径, 默认为reversePath</span><br><span class="line">      reverseApiPath: /api</span><br><span class="line">      # 可选, 反向Websocket Event路径, 默认为reversePath</span><br><span class="line">      reverseEventPath: /event</span><br><span class="line">      # 是否使用Universal客户端 默认为true</span><br><span class="line">      useUniversal: true</span><br><span class="line">      # 反向 WebSocket 客户端断线重连间隔，单位毫秒</span><br><span class="line">      reconnectInterval: 3000</span><br><span class="line">    - enable: true # 这里是第二个连接, 相当于CQHTTP分身版</span><br><span class="line">      postMessageFormat: string</span><br><span class="line">      reverseHost: 127.0.0.1</span><br><span class="line">      reversePort: 8081</span><br><span class="line">      reversePath: /ws</span><br><span class="line">      useUniversal: false</span><br><span class="line">      reconnectInterval: 3000</span><br></pre></td></tr></table></figure>可登录多个账号<br>运行后，按 <code>Ctrl+a d</code>退出当前screen</li><li>重新运行mirai<br><code>nonebot</code> 中只需要修改bot运行ip和端口和 <code>reverseHost</code>  <code>reversePort</code> 相同，再运行即可</li></ol><h3 id="5-screen"><a href="#5-screen" class="headerlink" title="5. screen"></a>5. screen</h3><table><thead><tr><th>指令</th><th>解释</th></tr></thead><tbody><tr><td>screen -S test</td><td>创建一个名为test的screen</td></tr><tr><td>screen -ls</td><td>列出所有screen</td></tr><tr><td>screen -d test</td><td>卸载名为test的screen，但screen中的任务会继续执行</td></tr><tr><td>screen -r test</td><td>恢复名为test的screen</td></tr><tr><td>exit</td><td>退出当前窗口</td></tr><tr><td>Ctrl+a c</td><td>在当前screen会话中创建窗口</td></tr><tr><td>Ctrl+a d</td><td>效果与screen -d相同，卸载当前会话</td></tr><tr><td>Ctrl+a w</td><td>显示当前会话中的窗口列表，显示在标题栏中</td></tr><tr><td>Ctrl+a n</td><td>切换到下一个窗口</td></tr><tr><td>Ctrl+a p</td><td>切换到上一个窗口</td></tr><tr><td>Ctrl+a 0-9</td><td>在第0个窗口和第9个窗口之间切换</td></tr></tbody></table><h3 id="6-supervisor"><a href="#6-supervisor" class="headerlink" title="6.supervisor"></a>6.supervisor</h3><p>更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl update</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 编程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
